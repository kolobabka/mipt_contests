
a.out:     формат файла elf64-x86-64


Дизассемблирование раздела .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <_init-0xcab>
 328:	78 38                	js     362 <_init-0xc9e>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	xor    %cs:(%rax),%al

Дизассемблирование раздела .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	10 00                	adc    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    $0x0,%al
 35a:	00 00                	add    %al,(%rax)
 35c:	14 00                	adc    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	03 00                	add    (%rax),%eax
 362:	00 00                	add    %al,(%rax)
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push %rbp
 367:	00 86 0d 8a 00 48    	add    %al,0x48008a0d(%rsi)
 36d:	c6                   	(bad)  
 36e:	33 2f                	xor    (%rdi),%ebp
 370:	1d db 53 b9 fa       	sbb    $0xfab953db,%eax
 375:	4b d6                	rex.WXB (bad) 
 377:	64 74 b1             	fs je  32b <_init-0xcd5>
 37a:	52                   	push   %rdx
 37b:	c3                   	retq   

Дизассемблирование раздела .note.ABI-tag:

000000000000037c <.note.ABI-tag>:
 37c:	04 00                	add    $0x0,%al
 37e:	00 00                	add    %al,(%rax)
 380:	10 00                	adc    %al,(%rax)
 382:	00 00                	add    %al,(%rax)
 384:	01 00                	add    %eax,(%rax)
 386:	00 00                	add    %al,(%rax)
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push %rbp
 38b:	00 00                	add    %al,(%rax)
 38d:	00 00                	add    %al,(%rax)
 38f:	00 03                	add    %al,(%rbx)
 391:	00 00                	add    %al,(%rax)
 393:	00 02                	add    %al,(%rdx)
 395:	00 00                	add    %al,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    (%rax),%al
 3a2:	00 00                	add    %al,(%rax)
 3a4:	09 00                	or     %eax,(%rax)
 3a6:	00 00                	add    %al,(%rax)
 3a8:	01 00                	add    %eax,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	06                   	(bad)  
 3ad:	00 00                	add    %al,(%rax)
 3af:	00 00                	add    %al,(%rax)
 3b1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3b7:	00 09                	add    %cl,(%rcx)
 3b9:	00 00                	add    %al,(%rax)
 3bb:	00 00                	add    %al,(%rax)
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 d1                	add    %dl,%cl
 3c1:	65 ce                	gs (bad) 
 3c3:	6d                   	insl   (%dx),%es:(%rdi)

Дизассемблирование раздела .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	93                   	xchg   %eax,%ebx
 3e1:	00 00                	add    %al,(%rax)
 3e3:	00 20                	add    %ah,(%rax)
	...
 3f5:	00 00                	add    %al,(%rax)
 3f7:	00 27                	add    %ah,(%rdi)
 3f9:	00 00                	add    %al,(%rax)
 3fb:	00 12                	add    %dl,(%rdx)
	...
 40d:	00 00                	add    %al,(%rax)
 40f:	00 38                	add    %bh,(%rax)
 411:	00 00                	add    %al,(%rax)
 413:	00 12                	add    %dl,(%rdx)
	...
 425:	00 00                	add    %al,(%rax)
 427:	00 55 00             	add    %dl,0x0(%rbp)
 42a:	00 00                	add    %al,(%rax)
 42c:	12 00                	adc    (%rax),%al
	...
 43e:	00 00                	add    %al,(%rax)
 440:	af                   	scas   %es:(%rdi),%eax
 441:	00 00                	add    %al,(%rax)
 443:	00 20                	add    %ah,(%rax)
	...
 455:	00 00                	add    %al,(%rax)
 457:	00 0b                	add    %cl,(%rbx)
 459:	00 00                	add    %al,(%rax)
 45b:	00 12                	add    %dl,(%rdx)
	...
 46d:	00 00                	add    %al,(%rax)
 46f:	00 18                	add    %bl,(%rax)
 471:	00 00                	add    %al,(%rax)
 473:	00 12                	add    %dl,(%rdx)
	...
 485:	00 00                	add    %al,(%rax)
 487:	00 be 00 00 00 20    	add    %bh,0x20000000(%rsi)
	...
 49d:	00 00                	add    %al,(%rax)
 49f:	00 46 00             	add    %al,0x0(%rsi)
 4a2:	00 00                	add    %al,(%rax)
 4a4:	22 00                	and    (%rax),%al
	...

Дизассемблирование раздела .dynstr:

00000000000004b8 <.dynstr>:
 4b8:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 4bc:	63 2e                	movslq (%rsi),%ebp
 4be:	73 6f                	jae    52f <_init-0xad1>
 4c0:	2e 36 00 5f 5f       	cs add %bl,%ss:0x5f(%rdi)
 4c5:	70 72                	jo     539 <_init-0xac7>
 4c7:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%rsi),%ebp
 4ce:	6b 00 5f             	imul   $0x5f,(%rax),%eax
 4d1:	5f                   	pop    %rdi
 4d2:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
 4d9:	73 63                	jae    53e <_init-0xac2>
 4db:	61                   	(bad)  
 4dc:	6e                   	outsb  %ds:(%rsi),(%dx)
 4dd:	66 00 5f 5f          	data16 add %bl,0x5f(%rdi)
 4e1:	73 74                	jae    557 <_init-0xaa9>
 4e3:	61                   	(bad)  
 4e4:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 4e7:	63 68 6b             	movslq 0x6b(%rax),%ebp
 4ea:	5f                   	pop    %rdi
 4eb:	66 61                	data16 (bad) 
 4ed:	69 6c 00 5f 5f 61 73 	imul   $0x7373615f,0x5f(%rax,%rax,1),%ebp
 4f4:	73 
 4f5:	65 72 74             	gs jb  56c <_init-0xa94>
 4f8:	5f                   	pop    %rdi
 4f9:	66 61                	data16 (bad) 
 4fb:	69 6c 00 5f 5f 63 78 	imul   $0x6178635f,0x5f(%rax,%rax,1),%ebp
 502:	61 
 503:	5f                   	pop    %rdi
 504:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 50a:	7a 65                	jp     571 <_init-0xa8f>
 50c:	00 5f 5f             	add    %bl,0x5f(%rdi)
 50f:	6c                   	insb   (%dx),%es:(%rdi)
 510:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 517:	72 74                	jb     58d <_init-0xa73>
 519:	5f                   	pop    %rdi
 51a:	6d                   	insl   (%dx),%es:(%rdi)
 51b:	61                   	(bad)  
 51c:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 523:	43 5f                	rex.XB pop %r15
 525:	32 2e                	xor    (%rsi),%ch
 527:	37                   	(bad)  
 528:	00 47 4c             	add    %al,0x4c(%rdi)
 52b:	49                   	rex.WB
 52c:	42                   	rex.X
 52d:	43 5f                	rex.XB pop %r15
 52f:	32 2e                	xor    (%rsi),%ch
 531:	33 2e                	xor    (%rsi),%ebp
 533:	34 00                	xor    $0x0,%al
 535:	47                   	rex.RXB
 536:	4c                   	rex.WR
 537:	49                   	rex.WB
 538:	42                   	rex.X
 539:	43 5f                	rex.XB pop %r15
 53b:	32 2e                	xor    (%rsi),%ch
 53d:	32 2e                	xor    (%rsi),%ch
 53f:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 544:	42                   	rex.X
 545:	43 5f                	rex.XB pop %r15
 547:	32 2e                	xor    (%rsi),%ch
 549:	34 00                	xor    $0x0,%al
 54b:	5f                   	pop    %rdi
 54c:	49 54                	rex.WB push %r12
 54e:	4d 5f                	rex.WRB pop %r15
 550:	64 65 72 65          	fs gs jb 5b9 <_init-0xa47>
 554:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 55b:	4d 
 55c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 55e:	6f                   	outsl  %ds:(%rsi),(%dx)
 55f:	6e                   	outsb  %ds:(%rsi),(%dx)
 560:	65 54                	gs push %rsp
 562:	61                   	(bad)  
 563:	62                   	(bad)  
 564:	6c                   	insb   (%dx),%es:(%rdi)
 565:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 569:	67 6d                	insl   (%dx),%es:(%edi)
 56b:	6f                   	outsl  %ds:(%rsi),(%dx)
 56c:	6e                   	outsb  %ds:(%rsi),(%dx)
 56d:	5f                   	pop    %rdi
 56e:	73 74                	jae    5e4 <_init-0xa1c>
 570:	61                   	(bad)  
 571:	72 74                	jb     5e7 <_init-0xa19>
 573:	5f                   	pop    %rdi
 574:	5f                   	pop    %rdi
 575:	00 5f 49             	add    %bl,0x49(%rdi)
 578:	54                   	push   %rsp
 579:	4d 5f                	rex.WRB pop %r15
 57b:	72 65                	jb     5e2 <_init-0xa1e>
 57d:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 584:	4d 
 585:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 587:	6f                   	outsl  %ds:(%rsi),(%dx)
 588:	6e                   	outsb  %ds:(%rsi),(%dx)
 589:	65 54                	gs push %rsp
 58b:	61                   	(bad)  
 58c:	62                   	.byte 0x62
 58d:	6c                   	insb   (%dx),%es:(%rdi)
 58e:	65                   	gs
	...

Дизассемблирование раздела .gnu.version:

0000000000000590 <.gnu.version>:
 590:	00 00                	add    %al,(%rax)
 592:	00 00                	add    %al,(%rax)
 594:	02 00                	add    (%rax),%al
 596:	03 00                	add    (%rax),%eax
 598:	03 00                	add    (%rax),%eax
 59a:	00 00                	add    %al,(%rax)
 59c:	04 00                	add    $0x0,%al
 59e:	05 00 00 00 03       	add    $0x3000000,%eax
	...

Дизассемблирование раздела .gnu.version_r:

00000000000005a8 <.gnu.version_r>:
 5a8:	01 00                	add    %eax,(%rax)
 5aa:	04 00                	add    $0x0,%al
 5ac:	01 00                	add    %eax,(%rax)
 5ae:	00 00                	add    %al,(%rax)
 5b0:	10 00                	adc    %al,(%rax)
 5b2:	00 00                	add    %al,(%rax)
 5b4:	00 00                	add    %al,(%rax)
 5b6:	00 00                	add    %al,(%rax)
 5b8:	17                   	(bad)  
 5b9:	69 69 0d 00 00 05 00 	imul   $0x50000,0xd(%rcx),%ebp
 5c0:	67 00 00             	add    %al,(%eax)
 5c3:	00 10                	add    %dl,(%rax)
 5c5:	00 00                	add    %al,(%rax)
 5c7:	00 74 19 69          	add    %dh,0x69(%rcx,%rbx,1)
 5cb:	09 00                	or     %eax,(%rax)
 5cd:	00 04 00             	add    %al,(%rax,%rax,1)
 5d0:	71 00                	jno    5d2 <_init-0xa2e>
 5d2:	00 00                	add    %al,(%rax)
 5d4:	10 00                	adc    %al,(%rax)
 5d6:	00 00                	add    %al,(%rax)
 5d8:	75 1a                	jne    5f4 <_init-0xa0c>
 5da:	69 09 00 00 03 00    	imul   $0x30000,(%rcx),%ecx
 5e0:	7d 00                	jge    5e2 <_init-0xa1e>
 5e2:	00 00                	add    %al,(%rax)
 5e4:	10 00                	adc    %al,(%rax)
 5e6:	00 00                	add    %al,(%rax)
 5e8:	14 69                	adc    $0x69,%al
 5ea:	69 0d 00 00 02 00 89 	imul   $0x89,0x20000(%rip),%ecx        # 205f4 <_end+0x1c5dc>
 5f1:	00 00 00 
 5f4:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .rela.dyn:

00000000000005f8 <.rela.dyn>:
 5f8:	a0 3d 00 00 00 00 00 	movabs 0x80000000000003d,%al
 5ff:	00 08 
 601:	00 00                	add    %al,(%rax)
 603:	00 00                	add    %al,(%rax)
 605:	00 00                	add    %al,(%rax)
 607:	00 a0 11 00 00 00    	add    %ah,0x11(%rax)
 60d:	00 00                	add    %al,(%rax)
 60f:	00 a8 3d 00 00 00    	add    %ch,0x3d(%rax)
 615:	00 00                	add    %al,(%rax)
 617:	00 08                	add    %cl,(%rax)
 619:	00 00                	add    %al,(%rax)
 61b:	00 00                	add    %al,(%rax)
 61d:	00 00                	add    %al,(%rax)
 61f:	00 60 11             	add    %ah,0x11(%rax)
 622:	00 00                	add    %al,(%rax)
 624:	00 00                	add    %al,(%rax)
 626:	00 00                	add    %al,(%rax)
 628:	08 40 00             	or     %al,0x0(%rax)
 62b:	00 00                	add    %al,(%rax)
 62d:	00 00                	add    %al,(%rax)
 62f:	00 08                	add    %cl,(%rax)
 631:	00 00                	add    %al,(%rax)
 633:	00 00                	add    %al,(%rax)
 635:	00 00                	add    %al,(%rax)
 637:	00 08                	add    %cl,(%rax)
 639:	40 00 00             	add    %al,(%rax)
 63c:	00 00                	add    %al,(%rax)
 63e:	00 00                	add    %al,(%rax)
 640:	d8 3f                	fdivrs (%rdi)
 642:	00 00                	add    %al,(%rax)
 644:	00 00                	add    %al,(%rax)
 646:	00 00                	add    %al,(%rax)
 648:	06                   	(bad)  
 649:	00 00                	add    %al,(%rax)
 64b:	00 01                	add    %al,(%rcx)
	...
 655:	00 00                	add    %al,(%rax)
 657:	00 e0                	add    %ah,%al
 659:	3f                   	(bad)  
 65a:	00 00                	add    %al,(%rax)
 65c:	00 00                	add    %al,(%rax)
 65e:	00 00                	add    %al,(%rax)
 660:	06                   	(bad)  
 661:	00 00                	add    %al,(%rax)
 663:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 66e:	00 00                	add    %al,(%rax)
 670:	e8 3f 00 00 00       	callq  6b4 <_init-0x94c>
 675:	00 00                	add    %al,(%rax)
 677:	00 06                	add    %al,(%rsi)
 679:	00 00                	add    %al,(%rax)
 67b:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 681 <_init-0x97f>
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 f0                	add    %dh,%al
 689:	3f                   	(bad)  
 68a:	00 00                	add    %al,(%rax)
 68c:	00 00                	add    %al,(%rax)
 68e:	00 00                	add    %al,(%rax)
 690:	06                   	(bad)  
 691:	00 00                	add    %al,(%rax)
 693:	00 08                	add    %cl,(%rax)
	...
 69d:	00 00                	add    %al,(%rax)
 69f:	00 f8                	add    %bh,%al
 6a1:	3f                   	(bad)  
 6a2:	00 00                	add    %al,(%rax)
 6a4:	00 00                	add    %al,(%rax)
 6a6:	00 00                	add    %al,(%rax)
 6a8:	06                   	(bad)  
 6a9:	00 00                	add    %al,(%rax)
 6ab:	00 09                	add    %cl,(%rcx)
	...

Дизассемблирование раздела .rela.plt:

00000000000006b8 <.rela.plt>:
 6b8:	b8 3f 00 00 00       	mov    $0x3f,%eax
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 07                	add    %al,(%rdi)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 02                	add    %al,(%rdx)
	...
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 c0                	add    %al,%al
 6d1:	3f                   	(bad)  
 6d2:	00 00                	add    %al,(%rax)
 6d4:	00 00                	add    %al,(%rax)
 6d6:	00 00                	add    %al,(%rax)
 6d8:	07                   	(bad)  
 6d9:	00 00                	add    %al,(%rax)
 6db:	00 03                	add    %al,(%rbx)
	...
 6e5:	00 00                	add    %al,(%rax)
 6e7:	00 c8                	add    %cl,%al
 6e9:	3f                   	(bad)  
 6ea:	00 00                	add    %al,(%rax)
 6ec:	00 00                	add    %al,(%rax)
 6ee:	00 00                	add    %al,(%rax)
 6f0:	07                   	(bad)  
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 06                	add    %al,(%rsi)
	...
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 d0                	add    %dl,%al
 701:	3f                   	(bad)  
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	07                   	(bad)  
 709:	00 00                	add    %al,(%rax)
 70b:	00 07                	add    %al,(%rdi)
	...

Дизассемблирование раздела .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Дизассемблирование раздела .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	pushq  0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmpq *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	pushq  $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmpq 1020 <.plt>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	pushq  $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmpq 1020 <.plt>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	pushq  $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmpq 1020 <.plt>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	pushq  $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmpq 1020 <.plt>
    106f:	90                   	nop

Дизассемблирование раздела .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmpq *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Дизассемблирование раздела .plt.sec:

0000000000001080 <__stack_chk_fail@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmpq *0x2f2d(%rip)        # 3fb8 <__stack_chk_fail@GLIBC_2.4>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__assert_fail@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmpq *0x2f25(%rip)        # 3fc0 <__assert_fail@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <__printf_chk@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmpq *0x2f1d(%rip)        # 3fc8 <__printf_chk@GLIBC_2.3.4>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <__isoc99_scanf@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmpq *0x2f15(%rip)        # 3fd0 <__isoc99_scanf@GLIBC_2.7>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Дизассемблирование раздела .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	4c 8d 05 26 02 00 00 	lea    0x226(%rip),%r8        # 1300 <__libc_csu_fini>
    10da:	48 8d 0d af 01 00 00 	lea    0x1af(%rip),%rcx        # 1290 <__libc_csu_init>
    10e1:	48 8d 3d c1 00 00 00 	lea    0xc1(%rip),%rdi        # 11a9 <main>
    10e8:	ff 15 f2 2e 00 00    	callq  *0x2ef2(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10ee:	f4                   	hlt    
    10ef:	90                   	nop

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    0x2f12(%rip),%rax        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 ce 2e 00 00 	mov    0x2ece(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmpq   *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    0x2ee2(%rip),%rsi        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmpq   *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmpb   $0x0,0x2ea5(%rip)        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	callq  1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	callq  10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	movb   $0x1,0x2e7d(%rip)        # 4010 <__TMC_END__>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	retq   
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmpq   1120 <register_tm_clones>

00000000000011a9 <main>:
#include <stdio.h>
#include <assert.h>

int main ()
{
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	41 54                	push   %r12
    11af:	55                   	push   %rbp
    11b0:	53                   	push   %rbx
    11b1:	48 83 ec 10          	sub    $0x10,%rsp
    11b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11bc:	00 00 
    11be:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    11c3:	31 c0                	xor    %eax,%eax
  int check = 0;
  unsigned N = 0;
    11c5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    11cc:	00 
  unsigned i = 2;

  check = scanf ("%u", &N);
    11cd:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    11d2:	48 8d 3d 2b 0e 00 00 	lea    0xe2b(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    11d9:	e8 d2 fe ff ff       	callq  10b0 <__isoc99_scanf@plt>
  assert (check == 1);
    11de:	83 f8 01             	cmp    $0x1,%eax
    11e1:	75 32                	jne    1215 <main+0x6c>

  while ( i * i < N)
    11e3:	8b 44 24 04          	mov    0x4(%rsp),%eax
  unsigned i = 2;
    11e7:	bb 02 00 00 00       	mov    $0x2,%ebx
}

__fortify_function int
printf (const char *__restrict __fmt, ...)
{
  return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
    11ec:	48 8d 2d 2c 0e 00 00 	lea    0xe2c(%rip),%rbp        # 201f <_IO_stdin_used+0x1f>
  while ( i * i < N)
    11f3:	83 f8 04             	cmp    $0x4,%eax
    11f6:	77 5e                	ja     1256 <main+0xad>
    11f8:	ba 01 00 00 00       	mov    $0x1,%edx
    11fd:	48 8d 35 1b 0e 00 00 	lea    0xe1b(%rip),%rsi        # 201f <_IO_stdin_used+0x1f>
    1204:	bf 01 00 00 00       	mov    $0x1,%edi
    1209:	b8 00 00 00 00       	mov    $0x0,%eax
    120e:	e8 8d fe ff ff       	callq  10a0 <__printf_chk@plt>
    1213:	eb 56                	jmp    126b <main+0xc2>
  assert (check == 1);
    1215:	48 8d 0d 07 0e 00 00 	lea    0xe07(%rip),%rcx        # 2023 <__PRETTY_FUNCTION__.2529>
    121c:	ba 0b 00 00 00       	mov    $0xb,%edx
    1221:	48 8d 35 df 0d 00 00 	lea    0xddf(%rip),%rsi        # 2007 <_IO_stdin_used+0x7>
    1228:	48 8d 3d e5 0d 00 00 	lea    0xde5(%rip),%rdi        # 2014 <_IO_stdin_used+0x14>
    122f:	e8 5c fe ff ff       	callq  1090 <__assert_fail@plt>
    1234:	48 89 ee             	mov    %rbp,%rsi
    1237:	bf 01 00 00 00       	mov    $0x1,%edi
    123c:	b8 00 00 00 00       	mov    $0x0,%eax
    1241:	e8 5a fe ff ff       	callq  10a0 <__printf_chk@plt>
    check = N % i;
    if (check == 0)
    {
      printf ("%d\n", 0);
    }
    i++;
    1246:	83 c3 01             	add    $0x1,%ebx
  while ( i * i < N)
    1249:	8b 44 24 04          	mov    0x4(%rsp),%eax
    124d:	89 da                	mov    %ebx,%edx
    124f:	0f af d3             	imul   %ebx,%edx
    1252:	39 c2                	cmp    %eax,%edx
    1254:	73 10                	jae    1266 <main+0xbd>
    check = N % i;
    1256:	ba 00 00 00 00       	mov    $0x0,%edx
    125b:	f7 f3                	div    %ebx
    125d:	41 89 d4             	mov    %edx,%r12d
    if (check == 0)
    1260:	85 d2                	test   %edx,%edx
    1262:	75 e2                	jne    1246 <main+0x9d>
    1264:	eb ce                	jmp    1234 <main+0x8b>
  }
  if (check)
    1266:	45 85 e4             	test   %r12d,%r12d
    1269:	75 8d                	jne    11f8 <main+0x4f>
    printf ("%d\n", 1);
}
    126b:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1270:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    1277:	00 00 
    1279:	75 0e                	jne    1289 <main+0xe0>
    127b:	b8 00 00 00 00       	mov    $0x0,%eax
    1280:	48 83 c4 10          	add    $0x10,%rsp
    1284:	5b                   	pop    %rbx
    1285:	5d                   	pop    %rbp
    1286:	41 5c                	pop    %r12
    1288:	c3                   	retq   
    1289:	e8 f2 fd ff ff       	callq  1080 <__stack_chk_fail@plt>
    128e:	66 90                	xchg   %ax,%ax

0000000000001290 <__libc_csu_init>:
    1290:	f3 0f 1e fa          	endbr64 
    1294:	41 57                	push   %r15
    1296:	4c 8d 3d 03 2b 00 00 	lea    0x2b03(%rip),%r15        # 3da0 <__frame_dummy_init_array_entry>
    129d:	41 56                	push   %r14
    129f:	49 89 d6             	mov    %rdx,%r14
    12a2:	41 55                	push   %r13
    12a4:	49 89 f5             	mov    %rsi,%r13
    12a7:	41 54                	push   %r12
    12a9:	41 89 fc             	mov    %edi,%r12d
    12ac:	55                   	push   %rbp
    12ad:	48 8d 2d f4 2a 00 00 	lea    0x2af4(%rip),%rbp        # 3da8 <__do_global_dtors_aux_fini_array_entry>
    12b4:	53                   	push   %rbx
    12b5:	4c 29 fd             	sub    %r15,%rbp
    12b8:	48 83 ec 08          	sub    $0x8,%rsp
    12bc:	e8 3f fd ff ff       	callq  1000 <_init>
    12c1:	48 c1 fd 03          	sar    $0x3,%rbp
    12c5:	74 1f                	je     12e6 <__libc_csu_init+0x56>
    12c7:	31 db                	xor    %ebx,%ebx
    12c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    12d0:	4c 89 f2             	mov    %r14,%rdx
    12d3:	4c 89 ee             	mov    %r13,%rsi
    12d6:	44 89 e7             	mov    %r12d,%edi
    12d9:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    12dd:	48 83 c3 01          	add    $0x1,%rbx
    12e1:	48 39 dd             	cmp    %rbx,%rbp
    12e4:	75 ea                	jne    12d0 <__libc_csu_init+0x40>
    12e6:	48 83 c4 08          	add    $0x8,%rsp
    12ea:	5b                   	pop    %rbx
    12eb:	5d                   	pop    %rbp
    12ec:	41 5c                	pop    %r12
    12ee:	41 5d                	pop    %r13
    12f0:	41 5e                	pop    %r14
    12f2:	41 5f                	pop    %r15
    12f4:	c3                   	retq   
    12f5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    12fc:	00 00 00 00 

0000000000001300 <__libc_csu_fini>:
    1300:	f3 0f 1e fa          	endbr64 
    1304:	c3                   	retq   

Дизассемблирование раздела .fini:

0000000000001308 <_fini>:
    1308:	f3 0f 1e fa          	endbr64 
    130c:	48 83 ec 08          	sub    $0x8,%rsp
    1310:	48 83 c4 08          	add    $0x8,%rsp
    1314:	c3                   	retq   

Дизассемблирование раздела .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	25 75 00 70 72       	and    $0x72700075,%eax
    2009:	6f                   	outsl  %ds:(%rsi),(%dx)
    200a:	62                   	(bad)  
    200b:	6c                   	insb   (%dx),%es:(%rdi)
    200c:	65 6d                	gs insl (%dx),%es:(%rdi)
    200e:	5f                   	pop    %rdi
    200f:	61                   	(bad)  
    2010:	70 2e                	jo     2040 <__GNU_EH_FRAME_HDR+0x18>
    2012:	63 00                	movslq (%rax),%eax
    2014:	63 68 65             	movslq 0x65(%rax),%ebp
    2017:	63 6b 20             	movslq 0x20(%rbx),%ebp
    201a:	3d 3d 20 31 00       	cmp    $0x31203d,%eax
    201f:	25 64 0a 00        	and    $0x6d000a64,%eax

0000000000002023 <__PRETTY_FUNCTION__.2529>:
    2023:	6d                   	insl   (%dx),%es:(%rdi)
    2024:	61                   	(bad)  
    2025:	69                   	.byte 0x69
    2026:	6e                   	outsb  %ds:(%rsi),(%dx)
	...

Дизассемблирование раздела .eh_frame_hdr:

0000000000002028 <__GNU_EH_FRAME_HDR>:
    2028:	01 1b                	add    %ebx,(%rbx)
    202a:	03 3b                	add    (%rbx),%edi
    202c:	44 00 00             	add    %r8b,(%rax)
    202f:	00 07                	add    %al,(%rdi)
    2031:	00 00                	add    %al,(%rax)
    2033:	00 f8                	add    %bh,%al
    2035:	ef                   	out    %eax,(%dx)
    2036:	ff                   	(bad)  
    2037:	ff                   	(bad)  
    2038:	78 00                	js     203a <__GNU_EH_FRAME_HDR+0x12>
    203a:	00 00                	add    %al,(%rax)
    203c:	48                   	rex.W
    203d:	f0 ff                	lock (bad) 
    203f:	ff a0 00 00 00 58    	jmpq   *0x58000000(%rax)
    2045:	f0 ff                	lock (bad) 
    2047:	ff                   	(bad)  
    2048:	b8 00 00 00 98       	mov    $0x98000000,%eax
    204d:	f0 ff                	lock (bad) 
    204f:	ff 60 00             	jmpq   *0x0(%rax)
    2052:	00 00                	add    %al,(%rax)
    2054:	81 f1 ff ff d0 00    	xor    $0xd0ffff,%ecx
    205a:	00 00                	add    %al,(%rax)
    205c:	68 f2 ff ff 08       	pushq  $0x8fffff2
    2061:	01 00                	add    %eax,(%rax)
    2063:	00 d8                	add    %bl,%al
    2065:	f2 ff                	repnz (bad) 
    2067:	ff 50 01             	callq  *0x1(%rax)
	...

Дизассемблирование раздела .eh_frame:

0000000000002070 <__FRAME_END__-0x11c>:
    2070:	14 00                	adc    $0x0,%al
    2072:	00 00                	add    %al,(%rax)
    2074:	00 00                	add    %al,(%rax)
    2076:	00 00                	add    %al,(%rax)
    2078:	01 7a 52             	add    %edi,0x52(%rdx)
    207b:	00 01                	add    %al,(%rcx)
    207d:	78 10                	js     208f <__GNU_EH_FRAME_HDR+0x67>
    207f:	01 1b                	add    %ebx,(%rbx)
    2081:	0c 07                	or     $0x7,%al
    2083:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2089:	00 00                	add    %al,(%rax)
    208b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    208e:	00 00                	add    %al,(%rax)
    2090:	30 f0                	xor    %dh,%al
    2092:	ff                   	(bad)  
    2093:	ff 2f                	ljmp   *(%rdi)
    2095:	00 00                	add    %al,(%rax)
    2097:	00 00                	add    %al,(%rax)
    2099:	44 07                	rex.R (bad) 
    209b:	10 00                	adc    %al,(%rax)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 24 00             	add    %ah,(%rax,%rax,1)
    20a2:	00 00                	add    %al,(%rax)
    20a4:	34 00                	xor    $0x0,%al
    20a6:	00 00                	add    %al,(%rax)
    20a8:	78 ef                	js     2099 <__GNU_EH_FRAME_HDR+0x71>
    20aa:	ff                   	(bad)  
    20ab:	ff 50 00             	callq  *0x0(%rax)
    20ae:	00 00                	add    %al,(%rax)
    20b0:	00 0e                	add    %cl,(%rsi)
    20b2:	10 46 0e             	adc    %al,0xe(%rsi)
    20b5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20b8:	0b 77 08             	or     0x8(%rdi),%esi
    20bb:	80 00 3f             	addb   $0x3f,(%rax)
    20be:	1a 3a                	sbb    (%rdx),%bh
    20c0:	2a 33                	sub    (%rbx),%dh
    20c2:	24 22                	and    $0x22,%al
    20c4:	00 00                	add    %al,(%rax)
    20c6:	00 00                	add    %al,(%rax)
    20c8:	14 00                	adc    $0x0,%al
    20ca:	00 00                	add    %al,(%rax)
    20cc:	5c                   	pop    %rsp
    20cd:	00 00                	add    %al,(%rax)
    20cf:	00 a0 ef ff ff 10    	add    %ah,0x10ffffef(%rax)
	...
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 14 00             	add    %dl,(%rax,%rax,1)
    20e2:	00 00                	add    %al,(%rax)
    20e4:	74 00                	je     20e6 <__GNU_EH_FRAME_HDR+0xbe>
    20e6:	00 00                	add    %al,(%rax)
    20e8:	98                   	cwtl   
    20e9:	ef                   	out    %eax,(%dx)
    20ea:	ff                   	(bad)  
    20eb:	ff 40 00             	incl   0x0(%rax)
	...
    20f6:	00 00                	add    %al,(%rax)
    20f8:	34 00                	xor    $0x0,%al
    20fa:	00 00                	add    %al,(%rax)
    20fc:	8c 00                	mov    %es,(%rax)
    20fe:	00 00                	add    %al,(%rax)
    2100:	a9 f0 ff ff e5       	test   $0xe5fffff0,%eax
    2105:	00 00                	add    %al,(%rax)
    2107:	00 00                	add    %al,(%rax)
    2109:	46 0e                	rex.RX (bad) 
    210b:	10 8c 02 41 0e 18 86 	adc    %cl,-0x79e7f1bf(%rdx,%rax,1)
    2112:	03 41 0e             	add    0xe(%rcx),%eax
    2115:	20 83 04 44 0e 30    	and    %al,0x300e4404(%rbx)
    211b:	02 cf                	add    %bh,%cl
    211d:	0a 0e                	or     (%rsi),%cl
    211f:	20 41 0e             	and    %al,0xe(%rcx)
    2122:	18 41 0e             	sbb    %al,0xe(%rcx)
    2125:	10 42 0e             	adc    %al,0xe(%rdx)
    2128:	08 41 0b             	or     %al,0xb(%rcx)
    212b:	00 00                	add    %al,(%rax)
    212d:	00 00                	add    %al,(%rax)
    212f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    2133:	00 c4                	add    %al,%ah
    2135:	00 00                	add    %al,(%rax)
    2137:	00 58 f1             	add    %bl,-0xf(%rax)
    213a:	ff                   	(bad)  
    213b:	ff 65 00             	jmpq   *0x0(%rbp)
    213e:	00 00                	add    %al,(%rax)
    2140:	00 46 0e             	add    %al,0xe(%rsi)
    2143:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2149:	8e 03                	mov    (%rbx),%es
    214b:	45 0e                	rex.RB (bad) 
    214d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2153:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff86302f9d <_end+0xffffffff862fef85>
    2159:	06                   	(bad)  
    215a:	48 0e                	rex.W (bad) 
    215c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2162:	6e                   	outsb  %ds:(%rsi),(%dx)
    2163:	0e                   	(bad)  
    2164:	38 41 0e             	cmp    %al,0xe(%rcx)
    2167:	30 41 0e             	xor    %al,0xe(%rcx)
    216a:	28 42 0e             	sub    %al,0xe(%rdx)
    216d:	20 42 0e             	and    %al,0xe(%rdx)
    2170:	18 42 0e             	sbb    %al,0xe(%rdx)
    2173:	10 42 0e             	adc    %al,0xe(%rdx)
    2176:	08 00                	or     %al,(%rax)
    2178:	10 00                	adc    %al,(%rax)
    217a:	00 00                	add    %al,(%rax)
    217c:	0c 01                	or     $0x1,%al
    217e:	00 00                	add    %al,(%rax)
    2180:	80 f1 ff             	xor    $0xff,%cl
    2183:	ff 05 00 00 00 00    	incl   0x0(%rip)        # 2189 <__GNU_EH_FRAME_HDR+0x161>
    2189:	00 00                	add    %al,(%rax)
	...

000000000000218c <__FRAME_END__>:
    218c:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .init_array:

0000000000003da0 <__frame_dummy_init_array_entry>:
    3da0:	a0                   	.byte 0xa0
    3da1:	11 00                	adc    %eax,(%rax)
    3da3:	00 00                	add    %al,(%rax)
    3da5:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .fini_array:

0000000000003da8 <__do_global_dtors_aux_fini_array_entry>:
    3da8:	60                   	(bad)  
    3da9:	11 00                	adc    %eax,(%rax)
    3dab:	00 00                	add    %al,(%rax)
    3dad:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .dynamic:

0000000000003db0 <_DYNAMIC>:
    3db0:	01 00                	add    %eax,(%rax)
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	01 00                	add    %eax,(%rax)
    3dba:	00 00                	add    %al,(%rax)
    3dbc:	00 00                	add    %al,(%rax)
    3dbe:	00 00                	add    %al,(%rax)
    3dc0:	0c 00                	or     $0x0,%al
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	00 10                	add    %dl,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	0d 00 00 00 00       	or     $0x0,%eax
    3dd5:	00 00                	add    %al,(%rax)
    3dd7:	00 08                	add    %cl,(%rax)
    3dd9:	13 00                	adc    (%rax),%eax
    3ddb:	00 00                	add    %al,(%rax)
    3ddd:	00 00                	add    %al,(%rax)
    3ddf:	00 19                	add    %bl,(%rcx)
    3de1:	00 00                	add    %al,(%rax)
    3de3:	00 00                	add    %al,(%rax)
    3de5:	00 00                	add    %al,(%rax)
    3de7:	00 a0 3d 00 00 00    	add    %ah,0x3d(%rax)
    3ded:	00 00                	add    %al,(%rax)
    3def:	00 1b                	add    %bl,(%rbx)
    3df1:	00 00                	add    %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 08                	add    %cl,(%rax)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 1a                	add    %bl,(%rdx)
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 a8 3d 00 00 00    	add    %ch,0x3d(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	08 00                	or     %al,(%rax)
    3e1a:	00 00                	add    %al,(%rax)
    3e1c:	00 00                	add    %al,(%rax)
    3e1e:	00 00                	add    %al,(%rax)
    3e20:	f5                   	cmc    
    3e21:	fe                   	(bad)  
    3e22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 a0 03 00 00 00    	add    %ah,0x3(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e35 <_DYNAMIC+0x85>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 b8 04 00 00 00    	add    %bh,0x4(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 06                	add    %al,(%rsi)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 c8                	add    %cl,%al
    3e49:	03 00                	add    (%rax),%eax
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 0a                	add    %cl,(%rdx)
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 d8                	add    %bl,%al
    3e59:	00 00                	add    %al,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 0b                	add    %cl,(%rbx)
    3e61:	00 00                	add    %al,(%rax)
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 18                	add    %bl,(%rax)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e75 <_DYNAMIC+0xc5>
	...
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 03                	add    %al,(%rbx)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 a0 3f 00 00 00    	add    %ah,0x3f(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 02                	add    %al,(%rdx)
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 60 00             	add    %ah,0x0(%rax)
    3e9a:	00 00                	add    %al,(%rax)
    3e9c:	00 00                	add    %al,(%rax)
    3e9e:	00 00                	add    %al,(%rax)
    3ea0:	14 00                	adc    $0x0,%al
    3ea2:	00 00                	add    %al,(%rax)
    3ea4:	00 00                	add    %al,(%rax)
    3ea6:	00 00                	add    %al,(%rax)
    3ea8:	07                   	(bad)  
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 17                	add    %dl,(%rdi)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 b8 06 00 00 00    	add    %bh,0x6(%rax)
    3ebd:	00 00                	add    %al,(%rax)
    3ebf:	00 07                	add    %al,(%rdi)
    3ec1:	00 00                	add    %al,(%rax)
    3ec3:	00 00                	add    %al,(%rax)
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 f8                	add    %bh,%al
    3ec9:	05 00 00 00 00       	add    $0x0,%eax
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	08 00                	or     %al,(%rax)
    3ed2:	00 00                	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	c0 00 00             	rolb   $0x0,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 09                	add    %cl,(%rcx)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 18                	add    %bl,(%rax)
    3ee9:	00 00                	add    %al,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 1e                	add    %bl,(%rsi)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 08                	add    %cl,(%rax)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 fb                	add    %bh,%bl
    3f01:	ff                   	(bad)  
    3f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 01                	add    %al,(%rcx)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	08 00                	or     %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 fe                	add    %bh,%dh
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 a8 05 00 00 00    	add    %ch,0x5(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 ff                	add    %bh,%bh
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 01                	add    %al,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 f0                	add    %dh,%al
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 90 05 00 00 00    	add    %dl,0x5(%rax)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 f9                	add    %bh,%cl
    3f41:	ff                   	(bad)  
    3f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 03                	add    %al,(%rbx)
	...

Дизассемблирование раздела .got:

0000000000003fa0 <_GLOBAL_OFFSET_TABLE_>:
    3fa0:	b0 3d                	mov    $0x3d,%al
	...
    3fb6:	00 00                	add    %al,(%rax)
    3fb8:	30 10                	xor    %dl,(%rax)
    3fba:	00 00                	add    %al,(%rax)
    3fbc:	00 00                	add    %al,(%rax)
    3fbe:	00 00                	add    %al,(%rax)
    3fc0:	40 10 00             	adc    %al,(%rax)
    3fc3:	00 00                	add    %al,(%rax)
    3fc5:	00 00                	add    %al,(%rax)
    3fc7:	00 50 10             	add    %dl,0x10(%rax)
    3fca:	00 00                	add    %al,(%rax)
    3fcc:	00 00                	add    %al,(%rax)
    3fce:	00 00                	add    %al,(%rax)
    3fd0:	60                   	(bad)  
    3fd1:	10 00                	adc    %al,(%rax)
	...

Дизассемблирование раздела .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .bss:

0000000000004010 <completed.8060>:
	...

Дизассемблирование раздела .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    %bh,(%rcx)
   e:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  11:	30 2d 31 37 75 62    	xor    %ch,0x62753731(%rip)        # 62753748 <_end+0x6274f730>
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	30 2e                	xor    %ch,(%rsi)
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 39                	and    %bh,(%rcx)
  25:	2e 33 2e             	xor    %cs:(%rsi),%ebp
  28:	30 00                	xor    %al,(%rax)

Дизассемблирование раздела .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	02 00                	add    (%rax),%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 00                	or     %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	a9 11 00 00 00       	test   $0x11,%eax
  15:	00 00                	add    %al,(%rax)
  17:	00 e5                	add    %ah,%ch
	...

Дизассемблирование раздела .debug_info:

0000000000000000 <.debug_info>:
   0:	b0 04                	mov    $0x4,%al
   2:	00 00                	add    %al,(%rax)
   4:	04 00                	add    $0x0,%al
   6:	00 00                	add    %al,(%rax)
   8:	00 00                	add    %al,(%rax)
   a:	08 01                	or     %al,(%rcx)
   c:	39 01                	cmp    %eax,(%rcx)
   e:	00 00                	add    %al,(%rax)
  10:	0c 25                	or     $0x25,%al
  12:	00 00                	add    %al,(%rax)
  14:	00 cd                	add    %cl,%ch
  16:	00 00                	add    %al,(%rax)
  18:	00 a9 11 00 00 00    	add    %ch,0x11(%rcx)
  1e:	00 00                	add    %al,(%rax)
  20:	00 e5                	add    %ah,%ch
	...
  2a:	00 00                	add    %al,(%rax)
  2c:	00 02                	add    %al,(%rdx)
  2e:	52                   	push   %rdx
  2f:	00 00                	add    %al,(%rax)
  31:	00 03                	add    %al,(%rbx)
  33:	d1 17                	rcll   (%rdi)
  35:	39 00                	cmp    %eax,(%rax)
  37:	00 00                	add    %al,(%rax)
  39:	03 08                	add    (%rax),%ecx
  3b:	07                   	(bad)  
  3c:	6b 02 00             	imul   $0x0,(%rdx),%eax
  3f:	00 03                	add    %al,(%rbx)
  41:	04 07                	add    $0x7,%al
  43:	70 02                	jo     47 <_init-0xfb9>
  45:	00 00                	add    %al,(%rax)
  47:	04 08                	add    $0x8,%al
  49:	03 01                	add    (%rcx),%eax
  4b:	08 d3                	or     %dl,%bl
  4d:	01 00                	add    %eax,(%rax)
  4f:	00 03                	add    %al,(%rbx)
  51:	02 07                	add    (%rdi),%al
  53:	2c 02                	sub    $0x2,%al
  55:	00 00                	add    %al,(%rax)
  57:	03 01                	add    (%rcx),%eax
  59:	06                   	(bad)  
  5a:	d5                   	(bad)  
  5b:	01 00                	add    %eax,(%rax)
  5d:	00 03                	add    %al,(%rbx)
  5f:	02 05 48 00 00 00    	add    0x48(%rip),%al        # ad <_init-0xf53>
  65:	05 04 05 69 6e       	add    $0x6e690504,%eax
  6a:	74 00                	je     6c <_init-0xf94>
  6c:	03 08                	add    (%rax),%ecx
  6e:	05 29 01 00 00       	add    $0x129,%eax
  73:	02 95 02 00 00 04    	add    0x4000002(%rbp),%dl
  79:	98                   	cwtl   
  7a:	19 6c 00 00          	sbb    %ebp,0x0(%rax,%rax,1)
  7e:	00 02                	add    %al,(%rdx)
  80:	8b 02                	mov    (%rdx),%eax
  82:	00 00                	add    %al,(%rax)
  84:	04 99                	add    $0x99,%al
  86:	1b 6c 00 00          	sbb    0x0(%rax,%rax,1),%ebp
  8a:	00 06                	add    %al,(%rsi)
  8c:	08 91 00 00 00 03    	or     %dl,0x3000000(%rcx)
  92:	01 06                	add    %eax,(%rsi)
  94:	dc 01                	faddl  (%rcx)
  96:	00 00                	add    %al,(%rax)
  98:	07                   	(bad)  
  99:	91                   	xchg   %eax,%ecx
  9a:	00 00                	add    %al,(%rax)
  9c:	00 08                	add    %cl,(%rax)
  9e:	ca 01 00             	lret   $0x1
  a1:	00 d8                	add    %bl,%al
  a3:	05 31 08 24 02       	add    $0x2240831,%eax
  a8:	00 00                	add    %al,(%rax)
  aa:	09 8a 00 00 00 05    	or     %ecx,0x5000000(%rdx)
  b0:	33 07                	xor    (%rdi),%eax
  b2:	65 00 00             	add    %al,%gs:(%rax)
  b5:	00 00                	add    %al,(%rax)
  b7:	09 1f                	or     %ebx,(%rdi)
  b9:	02 00                	add    (%rax),%al
  bb:	00 05 36 09 8b 00    	add    %al,0x8b0936(%rip)        # 8b09f7 <_end+0x8ac9df>
  c1:	00 00                	add    %al,(%rax)
  c3:	08 09                	or     %cl,(%rcx)
  c5:	a7                   	cmpsl  %es:(%rdi),%ds:(%rsi)
  c6:	00 00                	add    %al,(%rax)
  c8:	00 05 37 09 8b 00    	add    %al,0x8b0937(%rip)        # 8b0a05 <_end+0x8ac9ed>
  ce:	00 00                	add    %al,(%rax)
  d0:	10 09                	adc    %cl,(%rcx)
  d2:	d6                   	(bad)  
  d3:	02 00                	add    (%rax),%al
  d5:	00 05 38 09 8b 00    	add    %al,0x8b0938(%rip)        # 8b0a13 <_end+0x8ac9fb>
  db:	00 00                	add    %al,(%rax)
  dd:	18 09                	sbb    %cl,(%rcx)
  df:	f6 01 00             	testb  $0x0,(%rcx)
  e2:	00 05 39 09 8b 00    	add    %al,0x8b0939(%rip)        # 8b0a21 <_end+0x8aca09>
  e8:	00 00                	add    %al,(%rax)
  ea:	20 09                	and    %cl,(%rcx)
  ec:	7c 00                	jl     ee <_init-0xf12>
  ee:	00 00                	add    %al,(%rax)
  f0:	05 3a 09 8b 00       	add    $0x8b093a,%eax
  f5:	00 00                	add    %al,(%rax)
  f7:	28 09                	sub    %cl,(%rcx)
  f9:	7d 02                	jge    fd <_init-0xf03>
  fb:	00 00                	add    %al,(%rax)
  fd:	05 3b 09 8b 00       	add    $0x8b093b,%eax
 102:	00 00                	add    %al,(%rax)
 104:	30 09                	xor    %cl,(%rcx)
 106:	91                   	xchg   %eax,%ecx
 107:	00 00                	add    %al,(%rax)
 109:	00 05 3c 09 8b 00    	add    %al,0x8b093c(%rip)        # 8b0a4b <_end+0x8aca33>
 10f:	00 00                	add    %al,(%rax)
 111:	38 09                	cmp    %cl,(%rcx)
 113:	00 00                	add    %al,(%rax)
 115:	00 00                	add    %al,(%rax)
 117:	05 3d 09 8b 00       	add    $0x8b093d,%eax
 11c:	00 00                	add    %al,(%rax)
 11e:	40 09 f9             	rex or %edi,%ecx
 121:	02 00                	add    (%rax),%al
 123:	00 05 40 09 8b 00    	add    %al,0x8b0940(%rip)        # 8b0a69 <_end+0x8aca51>
 129:	00 00                	add    %al,(%rax)
 12b:	48 09 b2 02 00 00 05 	or     %rsi,0x5000002(%rdx)
 132:	41 09 8b 00 00 00 50 	or     %ecx,0x50000000(%r11)
 139:	09 3b                	or     %edi,(%rbx)
 13b:	00 00                	add    %al,(%rax)
 13d:	00 05 42 09 8b 00    	add    %al,0x8b0942(%rip)        # 8b0a85 <_end+0x8aca6d>
 143:	00 00                	add    %al,(%rax)
 145:	58                   	pop    %rax
 146:	09 9e 00 00 00 05    	or     %ebx,0x5000000(%rsi)
 14c:	44 16                	rex.R (bad) 
 14e:	3d 02 00 00 60       	cmp    $0x60000002,%eax
 153:	09 9d 02 00 00 05    	or     %ebx,0x5000002(%rbp)
 159:	46 14 43             	rex.RX adc $0x43,%al
 15c:	02 00                	add    (%rax),%al
 15e:	00 68 09             	add    %ch,0x9(%rax)
 161:	13 03                	adc    (%rbx),%eax
 163:	00 00                	add    %al,(%rax)
 165:	05 48 07 65 00       	add    $0x650748,%eax
 16a:	00 00                	add    %al,(%rax)
 16c:	70 09                	jo     177 <_init-0xe89>
 16e:	c8 02 00 00          	enterq $0x2,$0x0
 172:	05 49 07 65 00       	add    $0x650749,%eax
 177:	00 00                	add    %al,(%rax)
 179:	74 09                	je     184 <_init-0xe7c>
 17b:	0c 00                	or     $0x0,%al
 17d:	00 00                	add    %al,(%rax)
 17f:	05 4a 0b 73 00       	add    $0x730b4a,%eax
 184:	00 00                	add    %al,(%rax)
 186:	78 09                	js     191 <_init-0xe6f>
 188:	c1 00 00             	roll   $0x0,(%rax)
 18b:	00 05 4d 12 50 00    	add    %al,0x50124d(%rip)        # 5013de <_end+0x4fd3c6>
 191:	00 00                	add    %al,(%rax)
 193:	80 09 ea             	orb    $0xea,(%rcx)
 196:	02 00                	add    (%rax),%al
 198:	00 05 4e 0f 57 00    	add    %al,0x570f4e(%rip)        # 5710ec <_end+0x56d0d4>
 19e:	00 00                	add    %al,(%rax)
 1a0:	82                   	(bad)  
 1a1:	09 ec                	or     %ebp,%esp
 1a3:	01 00                	add    %eax,(%rax)
 1a5:	00 05 4f 08 49 02    	add    %al,0x249084f(%rip)        # 24909fa <_end+0x248c9e2>
 1ab:	00 00                	add    %al,(%rax)
 1ad:	83 09 23             	orl    $0x23,(%rcx)
 1b0:	01 00                	add    %eax,(%rax)
 1b2:	00 05 51 0f 59 02    	add    %al,0x2590f51(%rip)        # 2591109 <_end+0x258d0f1>
 1b8:	00 00                	add    %al,(%rax)
 1ba:	88 09                	mov    %cl,(%rcx)
 1bc:	10 00                	adc    %al,(%rax)
 1be:	00 00                	add    %al,(%rax)
 1c0:	05 59 0d 7f 00       	add    $0x7f0d59,%eax
 1c5:	00 00                	add    %al,(%rax)
 1c7:	90                   	nop
 1c8:	09 5c 02 00          	or     %ebx,0x0(%rdx,%rax,1)
 1cc:	00 05 5b 17 64 02    	add    %al,0x264175b(%rip)        # 264192d <_end+0x263d915>
 1d2:	00 00                	add    %al,(%rax)
 1d4:	98                   	cwtl   
 1d5:	09 a7 02 00 00 05    	or     %esp,0x5000002(%rdi)
 1db:	5c                   	pop    %rsp
 1dc:	19 6f 02             	sbb    %ebp,0x2(%rdi)
 1df:	00 00                	add    %al,(%rax)
 1e1:	a0 09 44 02 00 00 05 	movabs 0x145d050000024409,%al
 1e8:	5d 14 
 1ea:	43 02 00             	rex.XB add (%r8),%al
 1ed:	00 a8 09 b4 00 00    	add    %ch,0xb409(%rax)
 1f3:	00 05 5e 09 47 00    	add    %al,0x47095e(%rip)        # 470b57 <_end+0x46cb3f>
 1f9:	00 00                	add    %al,(%rax)
 1fb:	b0 09                	mov    $0x9,%al
 1fd:	52                   	push   %rdx
 1fe:	02 00                	add    (%rax),%al
 200:	00 05 5f 0a 2d 00    	add    %al,0x2d0a5f(%rip)        # 2d0c65 <_end+0x2ccc4d>
 206:	00 00                	add    %al,(%rax)
 208:	b8 09 d0 02 00       	mov    $0x2d009,%eax
 20d:	00 05 60 07 65 00    	add    %al,0x650760(%rip)        # 650973 <_end+0x64c95b>
 213:	00 00                	add    %al,(%rax)
 215:	c0 09 05             	rorb   $0x5,(%rcx)
 218:	02 00                	add    (%rax),%al
 21a:	00 05 62 08 75 02    	add    %al,0x2750862(%rip)        # 2750a82 <_end+0x274ca6a>
 220:	00 00                	add    %al,(%rax)
 222:	c4                   	(bad)  
 223:	00 02                	add    %al,(%rdx)
 225:	ce                   	(bad)  
 226:	01 00                	add    %eax,(%rax)
 228:	00 06                	add    %al,(%rsi)
 22a:	07                   	(bad)  
 22b:	19 9d 00 00 00 0a    	sbb    %ebx,0xa000000(%rbp)
 231:	30 03                	xor    %al,(%rbx)
 233:	00 00                	add    %al,(%rax)
 235:	05 2b 0e 0b e1       	add    $0xe10b0e2b,%eax
 23a:	01 00                	add    %eax,(%rax)
 23c:	00 06                	add    %al,(%rsi)
 23e:	08 38                	or     %bh,(%rax)
 240:	02 00                	add    (%rax),%al
 242:	00 06                	add    %al,(%rsi)
 244:	08 9d 00 00 00 0c    	or     %bl,0xc000000(%rbp)
 24a:	91                   	xchg   %eax,%ecx
 24b:	00 00                	add    %al,(%rax)
 24d:	00 59 02             	add    %bl,0x2(%rcx)
 250:	00 00                	add    %al,(%rax)
 252:	0d 39 00 00 00       	or     $0x39,%eax
 257:	00 00                	add    %al,(%rax)
 259:	06                   	(bad)  
 25a:	08 30                	or     %dh,(%rax)
 25c:	02 00                	add    (%rax),%al
 25e:	00 0b                	add    %cl,(%rbx)
 260:	59                   	pop    %rcx
 261:	02 00                	add    (%rax),%al
 263:	00 06                	add    %al,(%rsi)
 265:	08 5f 02             	or     %bl,0x2(%rdi)
 268:	00 00                	add    %al,(%rax)
 26a:	0b a4 02 00 00 06 08 	or     0x8060000(%rdx,%rax,1),%esp
 271:	6a 02                	pushq  $0x2
 273:	00 00                	add    %al,(%rax)
 275:	0c 91                	or     $0x91,%al
 277:	00 00                	add    %al,(%rax)
 279:	00 85 02 00 00 0d    	add    %al,0xd000002(%rbp)
 27f:	39 00                	cmp    %eax,(%rax)
 281:	00 00                	add    %al,(%rax)
 283:	13 00                	adc    (%rax),%eax
 285:	0e                   	(bad)  
 286:	c2 02 00             	retq   $0x2
 289:	00 07                	add    %al,(%rdi)
 28b:	89 0e                	mov    %ecx,(%rsi)
 28d:	91                   	xchg   %eax,%ecx
 28e:	02 00                	add    (%rax),%al
 290:	00 06                	add    %al,(%rsi)
 292:	08 24 02             	or     %ah,(%rdx,%rax,1)
 295:	00 00                	add    %al,(%rax)
 297:	0e                   	(bad)  
 298:	29 03                	sub    %eax,(%rbx)
 29a:	00 00                	add    %al,(%rax)
 29c:	07                   	(bad)  
 29d:	8a 0e                	mov    (%rsi),%cl
 29f:	91                   	xchg   %eax,%ecx
 2a0:	02 00                	add    (%rax),%al
 2a2:	00 0e                	add    %cl,(%rsi)
 2a4:	1c 01                	sbb    $0x1,%al
 2a6:	00 00                	add    %al,(%rax)
 2a8:	07                   	(bad)  
 2a9:	8b 0e                	mov    (%rsi),%ecx
 2ab:	91                   	xchg   %eax,%ecx
 2ac:	02 00                	add    (%rax),%al
 2ae:	00 0e                	add    %cl,(%rsi)
 2b0:	32 00                	xor    (%rax),%al
 2b2:	00 00                	add    %al,(%rax)
 2b4:	08 1a                	or     %bl,(%rdx)
 2b6:	0c 65                	or     $0x65,%al
 2b8:	00 00                	add    %al,(%rax)
 2ba:	00 0c d1             	add    %cl,(%rcx,%rdx,8)
 2bd:	02 00                	add    (%rax),%al
 2bf:	00 c6                	add    %al,%dh
 2c1:	02 00                	add    (%rax),%al
 2c3:	00 0f                	add    %cl,(%rdi)
 2c5:	00 07                	add    %al,(%rdi)
 2c7:	bb 02 00 00 06       	mov    $0x6000002,%ebx
 2cc:	08 98 00 00 00 07    	or     %bl,0x7000000(%rax)
 2d2:	cb                   	lret   
 2d3:	02 00                	add    (%rax),%al
 2d5:	00 10                	add    %dl,(%rax)
 2d7:	cb                   	lret   
 2d8:	02 00                	add    (%rax),%al
 2da:	00 0e                	add    %cl,(%rsi)
 2dc:	07                   	(bad)  
 2dd:	03 00                	add    (%rax),%eax
 2df:	00 08                	add    %cl,(%rax)
 2e1:	1b 1a                	sbb    (%rdx),%ebx
 2e3:	c6 02 00             	movb   $0x0,(%rdx)
 2e6:	00 11                	add    %dl,(%rcx)
 2e8:	3f                   	(bad)  
 2e9:	02 00                	add    (%rax),%al
 2eb:	00 01                	add    %al,(%rcx)
 2ed:	04 05                	add    $0x5,%al
 2ef:	65 00 00             	add    %al,%gs:(%rax)
 2f2:	00 a9 11 00 00 00    	add    %ch,0x11(%rcx)
 2f8:	00 00                	add    %al,(%rax)
 2fa:	00 e5                	add    %ah,%ch
 2fc:	00 00                	add    %al,(%rax)
 2fe:	00 00                	add    %al,(%rax)
 300:	00 00                	add    %al,(%rax)
 302:	00 01                	add    %al,(%rcx)
 304:	9c                   	pushfq 
 305:	51                   	push   %rcx
 306:	04 00                	add    $0x0,%al
 308:	00 12                	add    %dl,(%rdx)
 30a:	e4 02                	in     $0x2,%al
 30c:	00 00                	add    %al,(%rax)
 30e:	01 06                	add    %eax,(%rsi)
 310:	07                   	(bad)  
 311:	65 00 00             	add    %al,%gs:(%rax)
 314:	00 12                	add    %dl,(%rdx)
 316:	00 00                	add    %al,(%rax)
 318:	00 00                	add    %al,(%rax)
 31a:	00 00                	add    %al,(%rax)
 31c:	00 13                	add    %dl,(%rbx)
 31e:	4e 00 01             	rex.WRX add %r8b,(%rcx)
 321:	07                   	(bad)  
 322:	0c 40                	or     $0x40,%al
 324:	00 00                	add    %al,(%rax)
 326:	00 02                	add    %al,(%rdx)
 328:	91                   	xchg   %eax,%ecx
 329:	54                   	push   %rsp
 32a:	14 69                	adc    $0x69,%al
 32c:	00 01                	add    %al,(%rcx)
 32e:	08 0c 40             	or     %cl,(%rax,%rax,2)
 331:	00 00                	add    %al,(%rax)
 333:	00 d6                	add    %dl,%dh
 335:	00 00                	add    %al,(%rax)
 337:	00 d0                	add    %dl,%al
 339:	00 00                	add    %al,(%rax)
 33b:	00 15 68 00 00 00    	add    %dl,0x68(%rip)        # 3a9 <_init-0xc57>
 341:	61                   	(bad)  
 342:	04 00                	add    $0x0,%al
 344:	00 09                	add    %cl,(%rcx)
 346:	03 23                	add    (%rbx),%esp
 348:	20 00                	and    %al,(%rax)
 34a:	00 00                	add    %al,(%rax)
 34c:	00 00                	add    %al,(%rax)
 34e:	00 16                	add    %dl,(%rsi)
 350:	66 04 00             	data16 add $0x0,%al
 353:	00 34 12             	add    %dh,(%rdx,%rdx,1)
 356:	00 00                	add    %al,(%rax)
 358:	00 00                	add    %al,(%rax)
 35a:	00 00                	add    %al,(%rax)
 35c:	01 00                	add    %eax,(%rax)
 35e:	00 00                	add    %al,(%rax)
 360:	00 01                	add    %al,(%rcx)
 362:	12 07                	adc    (%rdi),%al
 364:	8f 03                	popq   (%rbx)
 366:	00 00                	add    %al,(%rax)
 368:	17                   	(bad)  
 369:	77 04                	ja     36f <_init-0xc91>
 36b:	00 00                	add    %al,(%rax)
 36d:	23 01                	and    (%rcx),%eax
 36f:	00 00                	add    %al,(%rax)
 371:	21 01                	and    %eax,(%rcx)
 373:	00 00                	add    %al,(%rax)
 375:	18 46 12             	sbb    %al,0x12(%rsi)
 378:	00 00                	add    %al,(%rax)
 37a:	00 00                	add    %al,(%rax)
 37c:	00 00                	add    %al,(%rax)
 37e:	85 04 00             	test   %eax,(%rax,%rax,1)
 381:	00 19                	add    %bl,(%rcx)
 383:	01 55 01             	add    %edx,0x1(%rbp)
 386:	31 19                	xor    %ebx,(%rcx)
 388:	01 54 02 76          	add    %edx,0x76(%rdx,%rax,1)
 38c:	00 00                	add    %al,(%rax)
 38e:	00 1a                	add    %bl,(%rdx)
 390:	66 04 00             	data16 add $0x0,%al
 393:	00 f8                	add    %bh,%al
 395:	11 00                	adc    %eax,(%rax)
 397:	00 00                	add    %al,(%rax)
 399:	00 00                	add    %al,(%rax)
 39b:	00 01                	add    %al,(%rcx)
 39d:	f8                   	clc    
 39e:	11 00                	adc    %eax,(%rax)
 3a0:	00 00                	add    %al,(%rax)
 3a2:	00 00                	add    %al,(%rax)
 3a4:	00 1d 00 00 00 00    	add    %bl,0x0(%rip)        # 3aa <_init-0xc56>
 3aa:	00 00                	add    %al,(%rax)
 3ac:	00 01                	add    %al,(%rcx)
 3ae:	17                   	(bad)  
 3af:	05 e0 03 00 00       	add    $0x3e0,%eax
 3b4:	17                   	(bad)  
 3b5:	77 04                	ja     3bb <_init-0xc45>
 3b7:	00 00                	add    %al,(%rax)
 3b9:	51                   	push   %rcx
 3ba:	01 00                	add    %eax,(%rax)
 3bc:	00 4f 01             	add    %cl,0x1(%rdi)
 3bf:	00 00                	add    %al,(%rax)
 3c1:	18 13                	sbb    %dl,(%rbx)
 3c3:	12 00                	adc    (%rax),%al
 3c5:	00 00                	add    %al,(%rax)
 3c7:	00 00                	add    %al,(%rax)
 3c9:	00 85 04 00 00 19    	add    %al,0x19000004(%rbp)
 3cf:	01 55 01             	add    %edx,0x1(%rbp)
 3d2:	31 19                	xor    %ebx,(%rcx)
 3d4:	01 54 02 76          	add    %edx,0x76(%rdx,%rax,1)
 3d8:	00 19                	add    %bl,(%rcx)
 3da:	01 51 01             	add    %edx,0x1(%rcx)
 3dd:	31 00                	xor    %eax,(%rax)
 3df:	00 1b                	add    %bl,(%rbx)
 3e1:	de 11                	ficoms (%rcx)
 3e3:	00 00                	add    %al,(%rax)
 3e5:	00 00                	add    %al,(%rax)
 3e7:	00 00                	add    %al,(%rax)
 3e9:	91                   	xchg   %eax,%ecx
 3ea:	04 00                	add    $0x0,%al
 3ec:	00 05 04 00 00 19    	add    %al,0x19000004(%rip)        # 190003f6 <_end+0x18ffc3de>
 3f2:	01 55 09             	add    %edx,0x9(%rbp)
 3f5:	03 04 20             	add    (%rax,%riz,1),%eax
 3f8:	00 00                	add    %al,(%rax)
 3fa:	00 00                	add    %al,(%rax)
 3fc:	00 00                	add    %al,(%rax)
 3fe:	19 01                	sbb    %eax,(%rcx)
 400:	54                   	push   %rsp
 401:	02 91 54 00 1b 34    	add    0x341b0054(%rcx),%dl
 407:	12 00                	adc    (%rax),%al
 409:	00 00                	add    %al,(%rax)
 40b:	00 00                	add    %al,(%rax)
 40d:	00 9e 04 00 00 43    	add    %bl,0x43000004(%rsi)
 413:	04 00                	add    $0x0,%al
 415:	00 19                	add    %bl,(%rcx)
 417:	01 55 09             	add    %edx,0x9(%rbp)
 41a:	03 14 20             	add    (%rax,%riz,1),%edx
 41d:	00 00                	add    %al,(%rax)
 41f:	00 00                	add    %al,(%rax)
 421:	00 00                	add    %al,(%rax)
 423:	19 01                	sbb    %eax,(%rcx)
 425:	54                   	push   %rsp
 426:	09 03                	or     %eax,(%rbx)
 428:	07                   	(bad)  
 429:	20 00                	and    %al,(%rax)
 42b:	00 00                	add    %al,(%rax)
 42d:	00 00                	add    %al,(%rax)
 42f:	00 19                	add    %bl,(%rcx)
 431:	01 51 01             	add    %edx,0x1(%rcx)
 434:	3b 19                	cmp    (%rcx),%ebx
 436:	01 52 09             	add    %edx,0x9(%rdx)
 439:	03 23                	add    (%rbx),%esp
 43b:	20 00                	and    %al,(%rax)
 43d:	00 00                	add    %al,(%rax)
 43f:	00 00                	add    %al,(%rax)
 441:	00 00                	add    %al,(%rax)
 443:	1c 8e                	sbb    $0x8e,%al
 445:	12 00                	adc    (%rax),%al
 447:	00 00                	add    %al,(%rax)
 449:	00 00                	add    %al,(%rax)
 44b:	00 aa 04 00 00 00    	add    %ch,0x4(%rdx)
 451:	0c 98                	or     $0x98,%al
 453:	00 00                	add    %al,(%rax)
 455:	00 61 04             	add    %ah,0x4(%rcx)
 458:	00 00                	add    %al,(%rax)
 45a:	0d 39 00 00 00       	or     $0x39,%eax
 45f:	04 00                	add    $0x0,%al
 461:	07                   	(bad)  
 462:	51                   	push   %rcx
 463:	04 00                	add    $0x0,%al
 465:	00 1d 32 01 00 00    	add    %bl,0x132(%rip)        # 59d <_init-0xa63>
 46b:	02 69 01             	add    0x1(%rcx),%ch
 46e:	65 00 00             	add    %al,%gs:(%rax)
 471:	00 03                	add    %al,(%rbx)
 473:	85 04 00             	test   %eax,(%rax,%rax,1)
 476:	00 1e                	add    %bl,(%rsi)
 478:	65 02 00             	add    %gs:(%rax),%al
 47b:	00 02                	add    %al,(%rdx)
 47d:	69 20 d6 02 00 00    	imul   $0x2d6,(%rax),%esp
 483:	1f                   	(bad)  
 484:	00 20                	add    %ah,(%rax)
 486:	18 00                	sbb    %al,(%rax)
 488:	00 00                	add    %al,(%rax)
 48a:	18 00                	sbb    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	02 5a 0c             	add    0xc(%rdx),%bl
 491:	21 59 00             	and    %ebx,0x0(%rcx)
 494:	00 00                	add    %al,(%rax)
 496:	62                   	(bad)  
 497:	00 00                	add    %al,(%rax)
 499:	00 07                	add    %al,(%rdi)
 49b:	9a                   	(bad)  
 49c:	01 0c 20             	add    %ecx,(%rax,%riz,1)
 49f:	1b 03                	sbb    (%rbx),%eax
 4a1:	00 00                	add    %al,(%rax)
 4a3:	1b 03                	sbb    (%rbx),%eax
 4a5:	00 00                	add    %al,(%rax)
 4a7:	09 45 0d             	or     %eax,0xd(%rbp)
 4aa:	22 0e                	and    (%rsi),%cl
 4ac:	02 00                	add    (%rax),%al
 4ae:	00 0e                	add    %cl,(%rsi)
 4b0:	02 00                	add    (%rax),%al
	...

Дизассемблирование раздела .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 11                	add    %edx,(%rcx)
   2:	01 25 0e 13 0b 03    	add    %esp,0x30b130e(%rip)        # 30b1316 <_end+0x30ad2fe>
   8:	0e                   	(bad)  
   9:	1b 0e                	sbb    (%rsi),%ecx
   b:	11 01                	adc    %eax,(%rcx)
   d:	12 07                	adc    (%rdi),%al
   f:	10 17                	adc    %dl,(%rdi)
  11:	00 00                	add    %al,(%rax)
  13:	02 16                	add    (%rsi),%dl
  15:	00 03                	add    %al,(%rbx)
  17:	0e                   	(bad)  
  18:	3a 0b                	cmp    (%rbx),%cl
  1a:	3b 0b                	cmp    (%rbx),%ecx
  1c:	39 0b                	cmp    %ecx,(%rbx)
  1e:	49 13 00             	adc    (%r8),%rax
  21:	00 03                	add    %al,(%rbx)
  23:	24 00                	and    $0x0,%al
  25:	0b 0b                	or     (%rbx),%ecx
  27:	3e 0b 03             	or     %ds:(%rbx),%eax
  2a:	0e                   	(bad)  
  2b:	00 00                	add    %al,(%rax)
  2d:	04 0f                	add    $0xf,%al
  2f:	00 0b                	add    %cl,(%rbx)
  31:	0b 00                	or     (%rax),%eax
  33:	00 05 24 00 0b 0b    	add    %al,0xb0b0024(%rip)        # b0b005d <_end+0xb0ac045>
  39:	3e 0b 03             	or     %ds:(%rbx),%eax
  3c:	08 00                	or     %al,(%rax)
  3e:	00 06                	add    %al,(%rsi)
  40:	0f 00 0b             	str    (%rbx)
  43:	0b 49 13             	or     0x13(%rcx),%ecx
  46:	00 00                	add    %al,(%rax)
  48:	07                   	(bad)  
  49:	26 00 49 13          	add    %cl,%es:0x13(%rcx)
  4d:	00 00                	add    %al,(%rax)
  4f:	08 13                	or     %dl,(%rbx)
  51:	01 03                	add    %eax,(%rbx)
  53:	0e                   	(bad)  
  54:	0b 0b                	or     (%rbx),%ecx
  56:	3a 0b                	cmp    (%rbx),%cl
  58:	3b 0b                	cmp    (%rbx),%ecx
  5a:	39 0b                	cmp    %ecx,(%rbx)
  5c:	01 13                	add    %edx,(%rbx)
  5e:	00 00                	add    %al,(%rax)
  60:	09 0d 00 03 0e 3a    	or     %ecx,0x3a0e0300(%rip)        # 3a0e0366 <_end+0x3a0dc34e>
  66:	0b 3b                	or     (%rbx),%edi
  68:	0b 39                	or     (%rcx),%edi
  6a:	0b 49 13             	or     0x13(%rcx),%ecx
  6d:	38 0b                	cmp    %cl,(%rbx)
  6f:	00 00                	add    %al,(%rax)
  71:	0a 16                	or     (%rsi),%dl
  73:	00 03                	add    %al,(%rbx)
  75:	0e                   	(bad)  
  76:	3a 0b                	cmp    (%rbx),%cl
  78:	3b 0b                	cmp    (%rbx),%ecx
  7a:	39 0b                	cmp    %ecx,(%rbx)
  7c:	00 00                	add    %al,(%rax)
  7e:	0b 13                	or     (%rbx),%edx
  80:	00 03                	add    %al,(%rbx)
  82:	0e                   	(bad)  
  83:	3c 19                	cmp    $0x19,%al
  85:	00 00                	add    %al,(%rax)
  87:	0c 01                	or     $0x1,%al
  89:	01 49 13             	add    %ecx,0x13(%rcx)
  8c:	01 13                	add    %edx,(%rbx)
  8e:	00 00                	add    %al,(%rax)
  90:	0d 21 00 49 13       	or     $0x13490021,%eax
  95:	2f                   	(bad)  
  96:	0b 00                	or     (%rax),%eax
  98:	00 0e                	add    %cl,(%rsi)
  9a:	34 00                	xor    $0x0,%al
  9c:	03 0e                	add    (%rsi),%ecx
  9e:	3a 0b                	cmp    (%rbx),%cl
  a0:	3b 0b                	cmp    (%rbx),%ecx
  a2:	39 0b                	cmp    %ecx,(%rbx)
  a4:	49 13 3f             	adc    (%r15),%rdi
  a7:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
  aa:	00 00                	add    %al,(%rax)
  ac:	0f 21 00             	mov    %db0,%rax
  af:	00 00                	add    %al,(%rax)
  b1:	10 37                	adc    %dh,(%rdi)
  b3:	00 49 13             	add    %cl,0x13(%rcx)
  b6:	00 00                	add    %al,(%rax)
  b8:	11 2e                	adc    %ebp,(%rsi)
  ba:	01 3f                	add    %edi,(%rdi)
  bc:	19 03                	sbb    %eax,(%rbx)
  be:	0e                   	(bad)  
  bf:	3a 0b                	cmp    (%rbx),%cl
  c1:	3b 0b                	cmp    (%rbx),%ecx
  c3:	39 0b                	cmp    %ecx,(%rbx)
  c5:	49 13 11             	adc    (%r9),%rdx
  c8:	01 12                	add    %edx,(%rdx)
  ca:	07                   	(bad)  
  cb:	40 18 97 42 19 01 13 	sbb    %dl,0x13011942(%rdi)
  d2:	00 00                	add    %al,(%rax)
  d4:	12 34 00             	adc    (%rax,%rax,1),%dh
  d7:	03 0e                	add    (%rsi),%ecx
  d9:	3a 0b                	cmp    (%rbx),%cl
  db:	3b 0b                	cmp    (%rbx),%ecx
  dd:	39 0b                	cmp    %ecx,(%rbx)
  df:	49 13 02             	adc    (%r10),%rax
  e2:	17                   	(bad)  
  e3:	b7 42                	mov    $0x42,%bh
  e5:	17                   	(bad)  
  e6:	00 00                	add    %al,(%rax)
  e8:	13 34 00             	adc    (%rax,%rax,1),%esi
  eb:	03 08                	add    (%rax),%ecx
  ed:	3a 0b                	cmp    (%rbx),%cl
  ef:	3b 0b                	cmp    (%rbx),%ecx
  f1:	39 0b                	cmp    %ecx,(%rbx)
  f3:	49 13 02             	adc    (%r10),%rax
  f6:	18 00                	sbb    %al,(%rax)
  f8:	00 14 34             	add    %dl,(%rsp,%rsi,1)
  fb:	00 03                	add    %al,(%rbx)
  fd:	08 3a                	or     %bh,(%rdx)
  ff:	0b 3b                	or     (%rbx),%edi
 101:	0b 39                	or     (%rcx),%edi
 103:	0b 49 13             	or     0x13(%rcx),%ecx
 106:	02 17                	add    (%rdi),%dl
 108:	b7 42                	mov    $0x42,%bh
 10a:	17                   	(bad)  
 10b:	00 00                	add    %al,(%rax)
 10d:	15 34 00 03 0e       	adc    $0xe030034,%eax
 112:	49 13 34 19          	adc    (%r9,%rbx,1),%rsi
 116:	02 18                	add    (%rax),%bl
 118:	00 00                	add    %al,(%rax)
 11a:	16                   	(bad)  
 11b:	1d 01 31 13 52       	sbb    $0x52133101,%eax
 120:	01 b8 42 0b 55 17    	add    %edi,0x17550b42(%rax)
 126:	58                   	pop    %rax
 127:	0b 59 0b             	or     0xb(%rcx),%ebx
 12a:	57                   	push   %rdi
 12b:	0b 01                	or     (%rcx),%eax
 12d:	13 00                	adc    (%rax),%eax
 12f:	00 17                	add    %dl,(%rdi)
 131:	05 00 31 13 02       	add    $0x2133100,%eax
 136:	17                   	(bad)  
 137:	b7 42                	mov    $0x42,%bh
 139:	17                   	(bad)  
 13a:	00 00                	add    %al,(%rax)
 13c:	18 89 82 01 01 11    	sbb    %cl,0x11010182(%rcx)
 142:	01 31                	add    %esi,(%rcx)
 144:	13 00                	adc    (%rax),%eax
 146:	00 19                	add    %bl,(%rcx)
 148:	8a 82 01 00 02 18    	mov    0x18020001(%rdx),%al
 14e:	91                   	xchg   %eax,%ecx
 14f:	42 18 00             	rex.X sbb %al,(%rax)
 152:	00 1a                	add    %bl,(%rdx)
 154:	1d 01 31 13 52       	sbb    $0x52133101,%eax
 159:	01 b8 42 0b 11 01    	add    %edi,0x1110b42(%rax)
 15f:	12 07                	adc    (%rdi),%al
 161:	58                   	pop    %rax
 162:	0b 59 0b             	or     0xb(%rcx),%ebx
 165:	57                   	push   %rdi
 166:	0b 01                	or     (%rcx),%eax
 168:	13 00                	adc    (%rax),%eax
 16a:	00 1b                	add    %bl,(%rbx)
 16c:	89 82 01 01 11 01    	mov    %eax,0x1110101(%rdx)
 172:	31 13                	xor    %edx,(%rbx)
 174:	01 13                	add    %edx,(%rbx)
 176:	00 00                	add    %al,(%rax)
 178:	1c 89                	sbb    $0x89,%al
 17a:	82                   	(bad)  
 17b:	01 00                	add    %eax,(%rax)
 17d:	11 01                	adc    %eax,(%rcx)
 17f:	31 13                	xor    %edx,(%rbx)
 181:	00 00                	add    %al,(%rax)
 183:	1d 2e 01 3f 19       	sbb    $0x193f012e,%eax
 188:	03 0e                	add    (%rsi),%ecx
 18a:	3a 0b                	cmp    (%rbx),%cl
 18c:	3b 0b                	cmp    (%rbx),%ecx
 18e:	39 0b                	cmp    %ecx,(%rbx)
 190:	27                   	(bad)  
 191:	19 49 13             	sbb    %ecx,0x13(%rcx)
 194:	20 0b                	and    %cl,(%rbx)
 196:	34 19                	xor    $0x19,%al
 198:	01 13                	add    %edx,(%rbx)
 19a:	00 00                	add    %al,(%rax)
 19c:	1e                   	(bad)  
 19d:	05 00 03 0e 3a       	add    $0x3a0e0300,%eax
 1a2:	0b 3b                	or     (%rbx),%edi
 1a4:	0b 39                	or     (%rcx),%edi
 1a6:	0b 49 13             	or     0x13(%rcx),%ecx
 1a9:	00 00                	add    %al,(%rax)
 1ab:	1f                   	(bad)  
 1ac:	18 00                	sbb    %al,(%rax)
 1ae:	00 00                	add    %al,(%rax)
 1b0:	20 2e                	and    %ch,(%rsi)
 1b2:	00 3f                	add    %bh,(%rdi)
 1b4:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 1b7:	6e                   	outsb  %ds:(%rsi),(%dx)
 1b8:	0e                   	(bad)  
 1b9:	03 0e                	add    (%rsi),%ecx
 1bb:	3a 0b                	cmp    (%rbx),%cl
 1bd:	3b 0b                	cmp    (%rbx),%ecx
 1bf:	39 0b                	cmp    %ecx,(%rbx)
 1c1:	00 00                	add    %al,(%rax)
 1c3:	21 2e                	and    %ebp,(%rsi)
 1c5:	00 3f                	add    %bh,(%rdi)
 1c7:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 1ca:	6e                   	outsb  %ds:(%rsi),(%dx)
 1cb:	0e                   	(bad)  
 1cc:	03 0e                	add    (%rsi),%ecx
 1ce:	3a 0b                	cmp    (%rbx),%cl
 1d0:	3b 05 39 0b 00 00    	cmp    0xb39(%rip),%eax        # d0f <_init-0x2f1>
 1d6:	22 2e                	and    (%rsi),%ch
 1d8:	00 3f                	add    %bh,(%rdi)
 1da:	19 3c 19             	sbb    %edi,(%rcx,%rbx,1)
 1dd:	6e                   	outsb  %ds:(%rsi),(%dx)
 1de:	0e                   	(bad)  
 1df:	03 0e                	add    (%rsi),%ecx
 1e1:	00 00                	add    %al,(%rax)
	...

Дизассемблирование раздела .debug_line:

0000000000000000 <.debug_line>:
   0:	ca 01 00             	lret   $0x1
   3:	00 03                	add    %al,(%rbx)
   5:	00 0a                	add    %cl,(%rdx)
   7:	01 00                	add    %eax,(%rax)
   9:	00 01                	add    %al,(%rcx)
   b:	01 fb                	add    %edi,%ebx
   d:	0e                   	(bad)  
   e:	0d 00 01 01 01       	or     $0x1010100,%eax
  13:	01 00                	add    %eax,(%rax)
  15:	00 00                	add    %al,(%rax)
  17:	01 00                	add    %eax,(%rax)
  19:	00 01                	add    %al,(%rcx)
  1b:	2f                   	(bad)  
  1c:	75 73                	jne    91 <_init-0xf6f>
  1e:	72 2f                	jb     4f <_init-0xfb1>
  20:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  27:	2f                   	(bad)  
  28:	78 38                	js     62 <_init-0xf9e>
  2a:	36 5f                	ss pop %rdi
  2c:	36 34 2d             	ss xor $0x2d,%al
  2f:	6c                   	insb   (%dx),%es:(%rdi)
  30:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  37:	75 2f                	jne    68 <_init-0xf98>
  39:	62                   	(bad)  
  3a:	69 74 73 00 2f 75 73 	imul   $0x7273752f,0x0(%rbx,%rsi,2),%esi
  41:	72 
  42:	2f                   	(bad)  
  43:	6c                   	insb   (%dx),%es:(%rdi)
  44:	69 62 2f 67 63 63 2f 	imul   $0x2f636367,0x2f(%rdx),%esp
  4b:	78 38                	js     85 <_init-0xf7b>
  4d:	36 5f                	ss pop %rdi
  4f:	36 34 2d             	ss xor $0x2d,%al
  52:	6c                   	insb   (%dx),%es:(%rdi)
  53:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  5a:	75 2f                	jne    8b <_init-0xf75>
  5c:	39 2f                	cmp    %ebp,(%rdi)
  5e:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  65:	00 2f                	add    %ch,(%rdi)
  67:	75 73                	jne    dc <_init-0xf24>
  69:	72 2f                	jb     9a <_init-0xf66>
  6b:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  72:	2f                   	(bad)  
  73:	78 38                	js     ad <_init-0xf53>
  75:	36 5f                	ss pop %rdi
  77:	36 34 2d             	ss xor $0x2d,%al
  7a:	6c                   	insb   (%dx),%es:(%rdi)
  7b:	69 6e 75 78 2d 67 6e 	imul   $0x6e672d78,0x75(%rsi),%ebp
  82:	75 2f                	jne    b3 <_init-0xf4d>
  84:	62                   	(bad)  
  85:	69 74 73 2f 74 79 70 	imul   $0x65707974,0x2f(%rbx,%rsi,2),%esi
  8c:	65 
  8d:	73 00                	jae    8f <_init-0xf71>
  8f:	2f                   	(bad)  
  90:	75 73                	jne    105 <_init-0xefb>
  92:	72 2f                	jb     c3 <_init-0xf3d>
  94:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%rsi),%ebp
  9b:	00 00                	add    %al,(%rax)
  9d:	70 72                	jo     111 <_init-0xeef>
  9f:	6f                   	outsl  %ds:(%rsi),(%dx)
  a0:	62                   	(bad)  
  a1:	6c                   	insb   (%dx),%es:(%rdi)
  a2:	65 6d                	gs insl (%dx),%es:(%rdi)
  a4:	5f                   	pop    %rdi
  a5:	61                   	(bad)  
  a6:	70 2e                	jo     d6 <_init-0xf2a>
  a8:	63 00                	movslq (%rax),%eax
  aa:	00 00                	add    %al,(%rax)
  ac:	00 73 74             	add    %dh,0x74(%rbx)
  af:	64 69 6f 32 2e 68 00 	imul   $0x100682e,%fs:0x32(%rdi),%ebp
  b6:	01 
  b7:	00 00                	add    %al,(%rax)
  b9:	73 74                	jae    12f <_init-0xed1>
  bb:	64 64 65 66 2e 68 00 	fs fs gs cs pushw $0x200
  c2:	02 
  c3:	00 00                	add    %al,(%rax)
  c5:	74 79                	je     140 <_init-0xec0>
  c7:	70 65                	jo     12e <_init-0xed2>
  c9:	73 2e                	jae    f9 <_init-0xf07>
  cb:	68 00 01 00 00       	pushq  $0x100
  d0:	73 74                	jae    146 <_init-0xeba>
  d2:	72 75                	jb     149 <_init-0xeb7>
  d4:	63 74 5f 46          	movslq 0x46(%rdi,%rbx,2),%esi
  d8:	49                   	rex.WB
  d9:	4c                   	rex.WR
  da:	45                   	rex.RB
  db:	2e 68 00 03 00 00    	cs pushq $0x300
  e1:	46                   	rex.RX
  e2:	49                   	rex.WB
  e3:	4c                   	rex.WR
  e4:	45                   	rex.RB
  e5:	2e 68 00 03 00 00    	cs pushq $0x300
  eb:	73 74                	jae    161 <_init-0xe9f>
  ed:	64 69 6f 2e 68 00 04 	imul   $0x40068,%fs:0x2e(%rdi),%ebp
  f4:	00 
  f5:	00 73 79             	add    %dh,0x79(%rbx)
  f8:	73 5f                	jae    159 <_init-0xea7>
  fa:	65 72 72             	gs jb  16f <_init-0xe91>
  fd:	6c                   	insb   (%dx),%es:(%rdi)
  fe:	69 73 74 2e 68 00 01 	imul   $0x100682e,0x74(%rbx),%esi
 105:	00 00                	add    %al,(%rax)
 107:	61                   	(bad)  
 108:	73 73                	jae    17d <_init-0xe83>
 10a:	65 72 74             	gs jb  181 <_init-0xe7f>
 10d:	2e 68 00 04 00 00    	cs pushq $0x400
 113:	00 05 01 00 09 02    	add    %al,0x2090001(%rip)        # 209011a <_end+0x208c102>
 119:	a9 11 00 00 00       	test   $0x11,%eax
 11e:	00 00                	add    %al,(%rax)
 120:	00 16                	add    %dl,(%rsi)
 122:	06                   	(bad)  
 123:	ba 05 03 06 f3       	mov    $0xf3060305,%edx
 128:	13 05 0c 06 01 05    	adc    0x501060c(%rip),%eax        # 501073a <_end+0x500c722>
 12e:	03 06                	add    (%rsi),%eax
 130:	83 14 05 0b 06 01 05 	adcl   $0x3,0x501060b(,%rax,1)
 137:	03 
 138:	06                   	(bad)  
 139:	08 13                	or     %dl,(%rbx)
 13b:	05 09 5a 05 11       	add    $0x11055a09,%eax
 140:	06                   	(bad)  
 141:	01 05 0c 45 04 02    	add    %eax,0x204450c(%rip)        # 2044653 <_end+0x204063b>
 147:	05 0a 03 e3 00       	add    $0xe3030a,%eax
 14c:	58                   	pop    %rax
 14d:	04 01                	add    $0x1,%al
 14f:	05 09 03 a2 7f       	add    $0x7fa20309,%eax
 154:	74 05                	je     15b <_init-0xea5>
 156:	05 06 03 0a 58       	add    $0x580a0306,%eax
 15b:	04 02                	add    $0x2,%al
 15d:	05 01 03 d2 00       	add    $0xd20301,%eax
 162:	01 05 03 14 05 0a    	add    %eax,0xa051403(%rip)        # a05156b <_end+0xa04d553>
 168:	06                   	(bad)  
 169:	01 08                	add    %ecx,(%rax)
 16b:	ba 04 01 05 03       	mov    $0x3050104,%edx
 170:	00 02                	add    %al,(%rdx)
 172:	04 01                	add    $0x1,%al
 174:	06                   	(bad)  
 175:	03 a0 7f 01 05 07    	add    0x705017f(%rax),%esp
 17b:	08 dd                	or     %bl,%ch
 17d:	04 02                	add    $0x2,%al
 17f:	05 01 03 d7 00       	add    $0xd70301,%eax
 184:	01 05 03 14 05 0a    	add    %eax,0xa051403(%rip)        # a05158d <_end+0xa04d575>
 18a:	06                   	(bad)  
 18b:	01 08                	add    %ecx,(%rax)
 18d:	20 04 01             	and    %al,(%rcx,%rax,1)
 190:	05 05 06 03 a9       	add    $0xa9030605,%eax
 195:	7f 01                	jg     198 <_init-0xe68>
 197:	05 06 06 01 05       	add    $0x5010606,%eax
 19c:	09 06                	or     %eax,(%rsi)
 19e:	03 79 3c             	add    0x3c(%rcx),%edi
 1a1:	05 11 06 01 05       	add    $0x5010611,%eax
 1a6:	0d 4a 05 09 58       	or     $0x5809054a,%eax
 1ab:	05 05 06 4c 05       	add    $0x54c0605,%eax
 1b0:	0f 06                	clts   
 1b2:	01 05 0b 74 05 05    	add    %eax,0x505740b(%rip)        # 50575c3 <_end+0x50535ab>
 1b8:	06                   	(bad)  
 1b9:	3d 05 08 06 01       	cmp    $0x1060805,%eax
 1be:	05 03 06 6c 05       	add    $0x56c0603,%eax
 1c3:	06                   	(bad)  
 1c4:	06                   	(bad)  
 1c5:	01 05 01 5a 02 23    	add    %eax,0x23025a01(%rip)        # 23025bcc <_end+0x23021bb4>
 1cb:	00 01                	add    %al,(%rcx)
 1cd:	01                   	.byte 0x1

Дизассемблирование раздела .debug_str:

0000000000000000 <.debug_str>:
   0:	5f                   	pop    %rdi
   1:	49                   	rex.WB
   2:	4f 5f                	rex.WRXB pop %r15
   4:	62                   	(bad)  
   5:	75 66                	jne    6d <_init-0xf93>
   7:	5f                   	pop    %rdi
   8:	65 6e                	outsb  %gs:(%rsi),(%dx)
   a:	64 00 5f 6f          	add    %bl,%fs:0x6f(%rdi)
   e:	6c                   	insb   (%dx),%es:(%rdi)
   f:	64 5f                	fs pop %rdi
  11:	6f                   	outsl  %ds:(%rsi),(%dx)
  12:	66 66 73 65          	data16 data16 jae 7b <_init-0xf85>
  16:	74 00                	je     18 <_init-0xfe8>
  18:	5f                   	pop    %rdi
  19:	5f                   	pop    %rdi
  1a:	70 72                	jo     8e <_init-0xf72>
  1c:	69 6e 74 66 5f 63 68 	imul   $0x68635f66,0x74(%rsi),%ebp
  23:	6b 00 70             	imul   $0x70,(%rax),%eax
  26:	72 6f                	jb     97 <_init-0xf69>
  28:	62                   	(bad)  
  29:	6c                   	insb   (%dx),%es:(%rdi)
  2a:	65 6d                	gs insl (%dx),%es:(%rdi)
  2c:	5f                   	pop    %rdi
  2d:	61                   	(bad)  
  2e:	70 2e                	jo     5e <_init-0xfa2>
  30:	63 00                	movslq (%rax),%eax
  32:	73 79                	jae    ad <_init-0xf53>
  34:	73 5f                	jae    95 <_init-0xf6b>
  36:	6e                   	outsb  %ds:(%rsi),(%dx)
  37:	65 72 72             	gs jb  ac <_init-0xf54>
  3a:	00 5f 49             	add    %bl,0x49(%rdi)
  3d:	4f 5f                	rex.WRXB pop %r15
  3f:	73 61                	jae    a2 <_init-0xf5e>
  41:	76 65                	jbe    a8 <_init-0xf58>
  43:	5f                   	pop    %rdi
  44:	65 6e                	outsb  %gs:(%rsi),(%dx)
  46:	64 00 73 68          	add    %dh,%fs:0x68(%rbx)
  4a:	6f                   	outsl  %ds:(%rsi),(%dx)
  4b:	72 74                	jb     c1 <_init-0xf3f>
  4d:	20 69 6e             	and    %ch,0x6e(%rcx)
  50:	74 00                	je     52 <_init-0xfae>
  52:	73 69                	jae    bd <_init-0xf43>
  54:	7a 65                	jp     bb <_init-0xf45>
  56:	5f                   	pop    %rdi
  57:	74 00                	je     59 <_init-0xfa7>
  59:	5f                   	pop    %rdi
  5a:	5f                   	pop    %rdi
  5b:	69 73 6f 63 39 39 5f 	imul   $0x5f393963,0x6f(%rbx),%esi
  62:	73 63                	jae    c7 <_init-0xf39>
  64:	61                   	(bad)  
  65:	6e                   	outsb  %ds:(%rsi),(%dx)
  66:	66 00 5f 5f          	data16 add %bl,0x5f(%rdi)
  6a:	50                   	push   %rax
  6b:	52                   	push   %rdx
  6c:	45 54                	rex.RB push %r12
  6e:	54                   	push   %rsp
  6f:	59                   	pop    %rcx
  70:	5f                   	pop    %rdi
  71:	46 55                	rex.RX push %rbp
  73:	4e                   	rex.WRX
  74:	43 54                	rex.XB push %r12
  76:	49                   	rex.WB
  77:	4f                   	rex.WRXB
  78:	4e 5f                	rex.WRX pop %rdi
  7a:	5f                   	pop    %rdi
  7b:	00 5f 49             	add    %bl,0x49(%rdi)
  7e:	4f 5f                	rex.WRXB pop %r15
  80:	77 72                	ja     f4 <_init-0xf0c>
  82:	69 74 65 5f 70 74 72 	imul   $0x727470,0x5f(%rbp,%riz,2),%esi
  89:	00 
  8a:	5f                   	pop    %rdi
  8b:	66 6c                	data16 insb (%dx),%es:(%rdi)
  8d:	61                   	(bad)  
  8e:	67 73 00             	addr32 jae 91 <_init-0xf6f>
  91:	5f                   	pop    %rdi
  92:	49                   	rex.WB
  93:	4f 5f                	rex.WRXB pop %r15
  95:	62                   	(bad)  
  96:	75 66                	jne    fe <_init-0xf02>
  98:	5f                   	pop    %rdi
  99:	62 61                	(bad)  
  9b:	73 65                	jae    102 <_init-0xefe>
  9d:	00 5f 6d             	add    %bl,0x6d(%rdi)
  a0:	61                   	(bad)  
  a1:	72 6b                	jb     10e <_init-0xef2>
  a3:	65 72 73             	gs jb  119 <_init-0xee7>
  a6:	00 5f 49             	add    %bl,0x49(%rdi)
  a9:	4f 5f                	rex.WRXB pop %r15
  ab:	72 65                	jb     112 <_init-0xeee>
  ad:	61                   	(bad)  
  ae:	64 5f                	fs pop %rdi
  b0:	65 6e                	outsb  %gs:(%rsi),(%dx)
  b2:	64 00 5f 66          	add    %bl,%fs:0x66(%rdi)
  b6:	72 65                	jb     11d <_init-0xee3>
  b8:	65 72 65             	gs jb  120 <_init-0xee0>
  bb:	73 5f                	jae    11c <_init-0xee4>
  bd:	62                   	(bad)  
  be:	75 66                	jne    126 <_init-0xeda>
  c0:	00 5f 63             	add    %bl,0x63(%rdi)
  c3:	75 72                	jne    137 <_init-0xec9>
  c5:	5f                   	pop    %rdi
  c6:	63 6f 6c             	movslq 0x6c(%rdi),%ebp
  c9:	75 6d                	jne    138 <_init-0xec8>
  cb:	6e                   	outsb  %ds:(%rsi),(%dx)
  cc:	00 2f                	add    %ch,(%rdi)
  ce:	68 6f 6d 65 2f       	pushq  $0x2f656d6f
  d3:	6b 6f 6c 6f          	imul   $0x6f,0x6c(%rdi),%ebp
  d7:	62 61                	(bad)  
  d9:	6b 61 32 30          	imul   $0x30,0x32(%rcx),%esp
  dd:	30 30                	xor    %dh,(%rax)
  df:	2f                   	(bad)  
  e0:	d0 a0 d0 b0 d0 b1    	shlb   -0x4e2f4f30(%rax)
  e6:	d0 be d1 87 d0 b8    	sarb   -0x472f782f(%rsi)
  ec:	d0 b9 20 d1 81 d1    	sarb   -0x2e7e2ee0(%rcx)
  f2:	82                   	(bad)  
  f3:	d0 be d0 bb 2f 6d    	sarb   0x6d2fbbd0(%rsi)
  f9:	69 70 74 5f 63 6f 6e 	imul   $0x6e6f635f,0x74(%rax),%esi
 100:	74 65                	je     167 <_init-0xe99>
 102:	73 74                	jae    178 <_init-0xe88>
 104:	73 2f                	jae    135 <_init-0xecb>
 106:	32 5f 73             	xor    0x73(%rdi),%bl
 109:	65 6d                	gs insl (%dx),%es:(%rdi)
 10b:	2f                   	(bad)  
 10c:	37                   	(bad)  
 10d:	5f                   	pop    %rdi
 10e:	74 68                	je     178 <_init-0xe88>
 110:	2f                   	(bad)  
 111:	50                   	push   %rax
 112:	72 6f                	jb     183 <_init-0xe7d>
 114:	62                   	(bad)  
 115:	6c                   	insb   (%dx),%es:(%rdi)
 116:	65 6d                	gs insl (%dx),%es:(%rdi)
 118:	5f                   	pop    %rdi
 119:	41 50                	push   %r8
 11b:	00 73 74             	add    %dh,0x74(%rbx)
 11e:	64 65 72 72          	fs gs jb 194 <_init-0xe6c>
 122:	00 5f 6c             	add    %bl,0x6c(%rdi)
 125:	6f                   	outsl  %ds:(%rsi),(%dx)
 126:	63 6b 00             	movslq 0x0(%rbx),%ebp
 129:	6c                   	insb   (%dx),%es:(%rdi)
 12a:	6f                   	outsl  %ds:(%rsi),(%dx)
 12b:	6e                   	outsb  %ds:(%rsi),(%dx)
 12c:	67 20 69 6e          	and    %ch,0x6e(%ecx)
 130:	74 00                	je     132 <_init-0xece>
 132:	70 72                	jo     1a6 <_init-0xe5a>
 134:	69 6e 74 66 00 47 4e 	imul   $0x4e470066,0x74(%rsi),%ebp
 13b:	55                   	push   %rbp
 13c:	20 43 31             	and    %al,0x31(%rbx)
 13f:	37                   	(bad)  
 140:	20 39                	and    %bh,(%rcx)
 142:	2e 33 2e             	xor    %cs:(%rsi),%ebp
 145:	30 20                	xor    %ah,(%rax)
 147:	2d 6d 74 75 6e       	sub    $0x6e75746d,%eax
 14c:	65 3d 67 65 6e 65    	gs cmp $0x656e6567,%eax
 152:	72 69                	jb     1bd <_init-0xe43>
 154:	63 20                	movslq (%rax),%esp
 156:	2d 6d 61 72 63       	sub    $0x6372616d,%eax
 15b:	68 3d 78 38 36       	pushq  $0x3638783d
 160:	2d 36 34 20 2d       	sub    $0x2d203436,%eax
 165:	67 20 2d 4f 31 20 2d 	and    %ch,0x2d20314f(%eip)        # 2d2032bb <_end+0x2d1ff2a3>
 16c:	66 61                	data16 (bad) 
 16e:	73 79                	jae    1e9 <_init-0xe17>
 170:	6e                   	outsb  %ds:(%rsi),(%dx)
 171:	63 68 72             	movslq 0x72(%rax),%ebp
 174:	6f                   	outsl  %ds:(%rsi),(%dx)
 175:	6e                   	outsb  %ds:(%rsi),(%dx)
 176:	6f                   	outsl  %ds:(%rsi),(%dx)
 177:	75 73                	jne    1ec <_init-0xe14>
 179:	2d 75 6e 77 69       	sub    $0x69776e75,%eax
 17e:	6e                   	outsb  %ds:(%rsi),(%dx)
 17f:	64 2d 74 61 62 6c    	fs sub $0x6c626174,%eax
 185:	65 73 20             	gs jae 1a8 <_init-0xe58>
 188:	2d 66 73 74 61       	sub    $0x61747366,%eax
 18d:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
 190:	70 72                	jo     204 <_init-0xdfc>
 192:	6f                   	outsl  %ds:(%rsi),(%dx)
 193:	74 65                	je     1fa <_init-0xe06>
 195:	63 74 6f 72          	movslq 0x72(%rdi,%rbp,2),%esi
 199:	2d 73 74 72 6f       	sub    $0x6f727473,%eax
 19e:	6e                   	outsb  %ds:(%rsi),(%dx)
 19f:	67 20 2d 66 73 74 61 	and    %ch,0x61747366(%eip)        # 6174750c <_end+0x617434f4>
 1a6:	63 6b 2d             	movslq 0x2d(%rbx),%ebp
 1a9:	63 6c 61 73          	movslq 0x73(%rcx,%riz,2),%ebp
 1ad:	68 2d 70 72 6f       	pushq  $0x6f72702d
 1b2:	74 65                	je     219 <_init-0xde7>
 1b4:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
 1b8:	6e                   	outsb  %ds:(%rsi),(%dx)
 1b9:	20 2d 66 63 66 2d    	and    %ch,0x2d666366(%rip)        # 2d666525 <_end+0x2d66250d>
 1bf:	70 72                	jo     233 <_init-0xdcd>
 1c1:	6f                   	outsl  %ds:(%rsi),(%dx)
 1c2:	74 65                	je     229 <_init-0xdd7>
 1c4:	63 74 69 6f          	movslq 0x6f(%rcx,%rbp,2),%esi
 1c8:	6e                   	outsb  %ds:(%rsi),(%dx)
 1c9:	00 5f 49             	add    %bl,0x49(%rdi)
 1cc:	4f 5f                	rex.WRXB pop %r15
 1ce:	46                   	rex.RX
 1cf:	49                   	rex.WB
 1d0:	4c                   	rex.WR
 1d1:	45 00 75 6e          	add    %r14b,0x6e(%r13)
 1d5:	73 69                	jae    240 <_init-0xdc0>
 1d7:	67 6e                	outsb  %ds:(%esi),(%dx)
 1d9:	65 64 20 63 68       	gs and %ah,%fs:0x68(%rbx)
 1de:	61                   	(bad)  
 1df:	72 00                	jb     1e1 <_init-0xe1f>
 1e1:	5f                   	pop    %rdi
 1e2:	49                   	rex.WB
 1e3:	4f 5f                	rex.WRXB pop %r15
 1e5:	6d                   	insl   (%dx),%es:(%rdi)
 1e6:	61                   	(bad)  
 1e7:	72 6b                	jb     254 <_init-0xdac>
 1e9:	65 72 00             	gs jb  1ec <_init-0xe14>
 1ec:	5f                   	pop    %rdi
 1ed:	73 68                	jae    257 <_init-0xda9>
 1ef:	6f                   	outsl  %ds:(%rsi),(%dx)
 1f0:	72 74                	jb     266 <_init-0xd9a>
 1f2:	62                   	(bad)  
 1f3:	75 66                	jne    25b <_init-0xda5>
 1f5:	00 5f 49             	add    %bl,0x49(%rdi)
 1f8:	4f 5f                	rex.WRXB pop %r15
 1fa:	77 72                	ja     26e <_init-0xd92>
 1fc:	69 74 65 5f 62 61 73 	imul   $0x65736162,0x5f(%rbp,%riz,2),%esi
 203:	65 
 204:	00 5f 75             	add    %bl,0x75(%rdi)
 207:	6e                   	outsb  %ds:(%rsi),(%dx)
 208:	75 73                	jne    27d <_init-0xd83>
 20a:	65 64 32 00          	gs xor %fs:(%rax),%al
 20e:	5f                   	pop    %rdi
 20f:	5f                   	pop    %rdi
 210:	73 74                	jae    286 <_init-0xd7a>
 212:	61                   	(bad)  
 213:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 216:	63 68 6b             	movslq 0x6b(%rax),%ebp
 219:	5f                   	pop    %rdi
 21a:	66 61                	data16 (bad) 
 21c:	69 6c 00 5f 49 4f 5f 	imul   $0x725f4f49,0x5f(%rax,%rax,1),%ebp
 223:	72 
 224:	65 61                	gs (bad) 
 226:	64 5f                	fs pop %rdi
 228:	70 74                	jo     29e <_init-0xd62>
 22a:	72 00                	jb     22c <_init-0xdd4>
 22c:	73 68                	jae    296 <_init-0xd6a>
 22e:	6f                   	outsl  %ds:(%rsi),(%dx)
 22f:	72 74                	jb     2a5 <_init-0xd5b>
 231:	20 75 6e             	and    %dh,0x6e(%rbp)
 234:	73 69                	jae    29f <_init-0xd61>
 236:	67 6e                	outsb  %ds:(%esi),(%dx)
 238:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 23d:	74 00                	je     23f <_init-0xdc1>
 23f:	6d                   	insl   (%dx),%es:(%rdi)
 240:	61                   	(bad)  
 241:	69 6e 00 5f 66 72 65 	imul   $0x6572665f,0x0(%rsi),%ebp
 248:	65 72 65             	gs jb  2b0 <_init-0xd50>
 24b:	73 5f                	jae    2ac <_init-0xd54>
 24d:	6c                   	insb   (%dx),%es:(%rdi)
 24e:	69 73 74 00 5f 5f 70 	imul   $0x705f5f00,0x74(%rbx),%esi
 255:	61                   	(bad)  
 256:	64 35 00 5f 49 4f    	fs xor $0x4f495f00,%eax
 25c:	5f                   	pop    %rdi
 25d:	63 6f 64             	movslq 0x64(%rdi),%ebp
 260:	65 63 76 74          	movslq %gs:0x74(%rsi),%esi
 264:	00 5f 5f             	add    %bl,0x5f(%rdi)
 267:	66 6d                	insw   (%dx),%es:(%rdi)
 269:	74 00                	je     26b <_init-0xd95>
 26b:	6c                   	insb   (%dx),%es:(%rdi)
 26c:	6f                   	outsl  %ds:(%rsi),(%dx)
 26d:	6e                   	outsb  %ds:(%rsi),(%dx)
 26e:	67 20 75 6e          	and    %dh,0x6e(%ebp)
 272:	73 69                	jae    2dd <_init-0xd23>
 274:	67 6e                	outsb  %ds:(%esi),(%dx)
 276:	65 64 20 69 6e       	gs and %ch,%fs:0x6e(%rcx)
 27b:	74 00                	je     27d <_init-0xd83>
 27d:	5f                   	pop    %rdi
 27e:	49                   	rex.WB
 27f:	4f 5f                	rex.WRXB pop %r15
 281:	77 72                	ja     2f5 <_init-0xd0b>
 283:	69 74 65 5f 65 6e 64 	imul   $0x646e65,0x5f(%rbp,%riz,2),%esi
 28a:	00 
 28b:	5f                   	pop    %rdi
 28c:	5f                   	pop    %rdi
 28d:	6f                   	outsl  %ds:(%rsi),(%dx)
 28e:	66 66 36 34 5f       	data16 data16 ss xor $0x5f,%al
 293:	74 00                	je     295 <_init-0xd6b>
 295:	5f                   	pop    %rdi
 296:	5f                   	pop    %rdi
 297:	6f                   	outsl  %ds:(%rsi),(%dx)
 298:	66 66 5f             	data16 pop %di
 29b:	74 00                	je     29d <_init-0xd63>
 29d:	5f                   	pop    %rdi
 29e:	63 68 61             	movslq 0x61(%rax),%ebp
 2a1:	69 6e 00 5f 49 4f 5f 	imul   $0x5f4f495f,0x0(%rsi),%ebp
 2a8:	77 69                	ja     313 <_init-0xced>
 2aa:	64 65 5f             	fs gs pop %rdi
 2ad:	64 61                	fs (bad) 
 2af:	74 61                	je     312 <_init-0xcee>
 2b1:	00 5f 49             	add    %bl,0x49(%rdi)
 2b4:	4f 5f                	rex.WRXB pop %r15
 2b6:	62 61                	(bad)  
 2b8:	63 6b 75             	movslq 0x75(%rbx),%ebp
 2bb:	70 5f                	jo     31c <_init-0xce4>
 2bd:	62 61                	(bad)  
 2bf:	73 65                	jae    326 <_init-0xcda>
 2c1:	00 73 74             	add    %dh,0x74(%rbx)
 2c4:	64 69 6e 00 5f 66 6c 	imul   $0x616c665f,%fs:0x0(%rsi),%ebp
 2cb:	61 
 2cc:	67 73 32             	addr32 jae 301 <_init-0xcff>
 2cf:	00 5f 6d             	add    %bl,0x6d(%rdi)
 2d2:	6f                   	outsl  %ds:(%rsi),(%dx)
 2d3:	64 65 00 5f 49       	fs add %bl,%gs:0x49(%rdi)
 2d8:	4f 5f                	rex.WRXB pop %r15
 2da:	72 65                	jb     341 <_init-0xcbf>
 2dc:	61                   	(bad)  
 2dd:	64 5f                	fs pop %rdi
 2df:	62 61                	(bad)  
 2e1:	73 65                	jae    348 <_init-0xcb8>
 2e3:	00 63 68             	add    %ah,0x68(%rbx)
 2e6:	65 63 6b 00          	movslq %gs:0x0(%rbx),%ebp
 2ea:	5f                   	pop    %rdi
 2eb:	76 74                	jbe    361 <_init-0xc9f>
 2ed:	61                   	(bad)  
 2ee:	62                   	(bad)  
 2ef:	6c                   	insb   (%dx),%es:(%rdi)
 2f0:	65 5f                	gs pop %rdi
 2f2:	6f                   	outsl  %ds:(%rsi),(%dx)
 2f3:	66 66 73 65          	data16 data16 jae 35c <_init-0xca4>
 2f7:	74 00                	je     2f9 <_init-0xd07>
 2f9:	5f                   	pop    %rdi
 2fa:	49                   	rex.WB
 2fb:	4f 5f                	rex.WRXB pop %r15
 2fd:	73 61                	jae    360 <_init-0xca0>
 2ff:	76 65                	jbe    366 <_init-0xc9a>
 301:	5f                   	pop    %rdi
 302:	62 61                	(bad)  
 304:	73 65                	jae    36b <_init-0xc95>
 306:	00 73 79             	add    %dh,0x79(%rbx)
 309:	73 5f                	jae    36a <_init-0xc96>
 30b:	65 72 72             	gs jb  380 <_init-0xc80>
 30e:	6c                   	insb   (%dx),%es:(%rdi)
 30f:	69 73 74 00 5f 66 69 	imul   $0x69665f00,0x74(%rbx),%esi
 316:	6c                   	insb   (%dx),%es:(%rdi)
 317:	65 6e                	outsb  %gs:(%rsi),(%dx)
 319:	6f                   	outsl  %ds:(%rsi),(%dx)
 31a:	00 5f 5f             	add    %bl,0x5f(%rdi)
 31d:	61                   	(bad)  
 31e:	73 73                	jae    393 <_init-0xc6d>
 320:	65 72 74             	gs jb  397 <_init-0xc69>
 323:	5f                   	pop    %rdi
 324:	66 61                	data16 (bad) 
 326:	69 6c 00 73 74 64 6f 	imul   $0x756f6474,0x73(%rax,%rax,1),%ebp
 32d:	75 
 32e:	74 00                	je     330 <_init-0xcd0>
 330:	5f                   	pop    %rdi
 331:	49                   	rex.WB
 332:	4f 5f                	rex.WRXB pop %r15
 334:	6c                   	insb   (%dx),%es:(%rdi)
 335:	6f                   	outsl  %ds:(%rsi),(%dx)
 336:	63 6b 5f             	movslq 0x5f(%rbx),%ebp
 339:	74 00                	je     33b <_init-0xcc5>

Дизассемблирование раздела .debug_loc:

0000000000000000 <.debug_loc>:
   0:	01 00                	add    %eax,(%rax)
	...
  12:	1c 00                	sbb    $0x0,%al
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	00 00                	add    %al,(%rax)
  1a:	35 00 00 00 00       	xor    $0x0,%eax
  1f:	00 00                	add    %al,(%rax)
  21:	00 02                	add    %al,(%rdx)
  23:	00 30                	add    %dh,(%rax)
  25:	9f                   	lahf   
  26:	35 00 00 00 00       	xor    $0x0,%eax
  2b:	00 00                	add    %al,(%rax)
  2d:	00 3a                	add    %bh,(%rdx)
  2f:	00 00                	add    %al,(%rax)
  31:	00 00                	add    %al,(%rax)
  33:	00 00                	add    %al,(%rax)
  35:	00 01                	add    %al,(%rcx)
  37:	00 50 3a             	add    %dl,0x3a(%rax)
  3a:	00 00                	add    %al,(%rax)
  3c:	00 00                	add    %al,(%rax)
  3e:	00 00                	add    %al,(%rax)
  40:	00 4f 00             	add    %cl,0x0(%rdi)
  43:	00 00                	add    %al,(%rax)
  45:	00 00                	add    %al,(%rax)
  47:	00 00                	add    %al,(%rax)
  49:	02 00                	add    (%rax),%al
  4b:	31 9f 6c 00 00 00    	xor    %ebx,0x6c(%rdi)
  51:	00 00                	add    %al,(%rax)
  53:	00 00                	add    %al,(%rax)
  55:	8a 00                	mov    (%rax),%al
  57:	00 00                	add    %al,(%rax)
  59:	00 00                	add    %al,(%rax)
  5b:	00 00                	add    %al,(%rax)
  5d:	01 00                	add    %eax,(%rax)
  5f:	50                   	push   %rax
  60:	8b 00                	mov    (%rax),%eax
  62:	00 00                	add    %al,(%rax)
  64:	00 00                	add    %al,(%rax)
  66:	00 00                	add    %al,(%rax)
  68:	9c                   	pushfq 
  69:	00 00                	add    %al,(%rax)
  6b:	00 00                	add    %al,(%rax)
  6d:	00 00                	add    %al,(%rax)
  6f:	00 01                	add    %al,(%rcx)
  71:	00 51 9c             	add    %dl,-0x64(%rcx)
  74:	00 00                	add    %al,(%rax)
  76:	00 00                	add    %al,(%rax)
  78:	00 00                	add    %al,(%rax)
  7a:	00 ad 00 00 00 00    	add    %ch,0x0(%rbp)
  80:	00 00                	add    %al,(%rax)
  82:	00 01                	add    %al,(%rcx)
  84:	00 5c ad 00          	add    %bl,0x0(%rbp,%rbp,4)
  88:	00 00                	add    %al,(%rax)
  8a:	00 00                	add    %al,(%rax)
  8c:	00 00                	add    %al,(%rax)
  8e:	b7 00                	mov    $0x0,%bh
  90:	00 00                	add    %al,(%rax)
  92:	00 00                	add    %al,(%rax)
  94:	00 00                	add    %al,(%rax)
  96:	02 00                	add    (%rax),%al
  98:	31 9f b7 00 00 00    	xor    %ebx,0xb7(%rdi)
  9e:	00 00                	add    %al,(%rax)
  a0:	00 00                	add    %al,(%rax)
  a2:	bd 00 00 00 00       	mov    $0x0,%ebp
  a7:	00 00                	add    %al,(%rax)
  a9:	00 01                	add    %al,(%rcx)
  ab:	00 51 bd             	add    %dl,-0x43(%rcx)
  ae:	00 00                	add    %al,(%rax)
  b0:	00 00                	add    %al,(%rax)
  b2:	00 00                	add    %al,(%rax)
  b4:	00 c2                	add    %al,%dl
  b6:	00 00                	add    %al,(%rax)
  b8:	00 00                	add    %al,(%rax)
  ba:	00 00                	add    %al,(%rax)
  bc:	00 01                	add    %al,(%rcx)
  be:	00 5c 00 00          	add    %bl,0x0(%rax,%rax,1)
	...
  ce:	00 00                	add    %al,(%rax)
  d0:	01 00                	add    %eax,(%rax)
  d2:	00 00                	add    %al,(%rax)
  d4:	00 00                	add    %al,(%rax)
  d6:	24 00                	and    $0x0,%al
  d8:	00 00                	add    %al,(%rax)
  da:	00 00                	add    %al,(%rax)
  dc:	00 00                	add    %al,(%rax)
  de:	4f 00 00             	rex.WRXB add %r8b,(%r8)
  e1:	00 00                	add    %al,(%rax)
  e3:	00 00                	add    %al,(%rax)
  e5:	00 02                	add    %al,(%rdx)
  e7:	00 32                	add    %dh,(%rdx)
  e9:	9f                   	lahf   
  ea:	6c                   	insb   (%dx),%es:(%rdi)
  eb:	00 00                	add    %al,(%rax)
  ed:	00 00                	add    %al,(%rax)
  ef:	00 00                	add    %al,(%rax)
  f1:	00 8b 00 00 00 00    	add    %cl,0x0(%rbx)
  f7:	00 00                	add    %al,(%rax)
  f9:	00 02                	add    %al,(%rdx)
  fb:	00 32                	add    %dh,(%rdx)
  fd:	9f                   	lahf   
  fe:	8b 00                	mov    (%rax),%eax
 100:	00 00                	add    %al,(%rax)
 102:	00 00                	add    %al,(%rax)
 104:	00 00                	add    %al,(%rax)
 106:	c2 00 00             	retq   $0x0
 109:	00 00                	add    %al,(%rax)
 10b:	00 00                	add    %al,(%rax)
 10d:	00 01                	add    %al,(%rcx)
 10f:	00 53 00             	add    %dl,0x0(%rbx)
	...
 11e:	00 00                	add    %al,(%rax)
 120:	00 01                	add    %al,(%rcx)
 122:	00 8b 00 00 00 00    	add    %cl,0x0(%rbx)
 128:	00 00                	add    %al,(%rax)
 12a:	00 9d 00 00 00 00    	add    %bl,0x0(%rbp)
 130:	00 00                	add    %al,(%rax)
 132:	00 0a                	add    %cl,(%rdx)
 134:	00 03                	add    %al,(%rbx)
 136:	1f                   	(bad)  
 137:	20 00                	and    %al,(%rax)
 139:	00 00                	add    %al,(%rax)
 13b:	00 00                	add    %al,(%rax)
 13d:	00 9f 00 00 00 00    	add    %bl,0x0(%rdi)
	...
 14f:	01 00                	add    %eax,(%rax)
 151:	4f 00 00             	rex.WRXB add %r8b,(%r8)
 154:	00 00                	add    %al,(%rax)
 156:	00 00                	add    %al,(%rax)
 158:	00 6c 00 00          	add    %ch,0x0(%rax,%rax,1)
 15c:	00 00                	add    %al,(%rax)
 15e:	00 00                	add    %al,(%rax)
 160:	00 0a                	add    %cl,(%rdx)
 162:	00 03                	add    %al,(%rbx)
 164:	1f                   	(bad)  
 165:	20 00                	and    %al,(%rax)
 167:	00 00                	add    %al,(%rax)
 169:	00 00                	add    %al,(%rax)
 16b:	00 9f 00 00 00 00    	add    %bl,0x0(%rdi)
	...

Дизассемблирование раздела .debug_ranges:

0000000000000000 <.debug_ranges>:
   0:	43 00 00             	rex.XB add %al,(%r8)
   3:	00 00                	add    %al,(%rax)
   5:	00 00                	add    %al,(%rax)
   7:	00 4a 00             	add    %cl,0x0(%rdx)
   a:	00 00                	add    %al,(%rax)
   c:	00 00                	add    %al,(%rax)
   e:	00 00                	add    %al,(%rax)
  10:	8b 00                	mov    (%rax),%eax
  12:	00 00                	add    %al,(%rax)
  14:	00 00                	add    %al,(%rax)
  16:	00 00                	add    %al,(%rax)
  18:	9d                   	popfq  
	...
Содержимое раздела .eh_frame (загружено из a.out):


00000000 0000000000000014 00000000 CIE
  Version:               1
  Augmentation:          "zR"
  Code alignment factor: 1
  Data alignment factor: -8
  Return address column: 16
  Дополняющие данные:     1b
  DW_CFA_def_cfa: r7 (rsp) ofs 8
  DW_CFA_offset: r16 (rip) at cfa-8
  DW_CFA_nop
  DW_CFA_nop

00000018 0000000000000014 0000001c FDE cie=00000000 pc=00000000000010c0..00000000000010ef
  DW_CFA_advance_loc: 4 to 00000000000010c4
  DW_CFA_undefined: r16 (rip)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000030 0000000000000024 00000034 FDE cie=00000000 pc=0000000000001020..0000000000001070
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 6 to 0000000000001026
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 10 to 0000000000001030
  DW_CFA_def_cfa_expression (DW_OP_breg7 (rsp): 8; DW_OP_breg16 (rip): 0; DW_OP_lit15; DW_OP_and; DW_OP_lit10; DW_OP_ge; DW_OP_lit3; DW_OP_shl; DW_OP_plus)
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000058 0000000000000014 0000005c FDE cie=00000000 pc=0000000000001070..0000000000001080
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000070 0000000000000014 00000074 FDE cie=00000000 pc=0000000000001080..00000000000010c0
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

00000088 0000000000000034 0000008c FDE cie=00000000 pc=00000000000011a9..000000000000128e
  DW_CFA_advance_loc: 6 to 00000000000011af
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r12 (r12) at cfa-16
  DW_CFA_advance_loc: 1 to 00000000000011b0
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r6 (rbp) at cfa-24
  DW_CFA_advance_loc: 1 to 00000000000011b1
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r3 (rbx) at cfa-32
  DW_CFA_advance_loc: 4 to 00000000000011b5
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc1: 207 to 0000000000001284
  DW_CFA_remember_state
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 1 to 0000000000001285
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 1 to 0000000000001286
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 0000000000001288
  DW_CFA_def_cfa_offset: 8
  DW_CFA_advance_loc: 1 to 0000000000001289
  DW_CFA_restore_state
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

000000c0 0000000000000044 000000c4 FDE cie=00000000 pc=0000000000001290..00000000000012f5
  DW_CFA_advance_loc: 6 to 0000000000001296
  DW_CFA_def_cfa_offset: 16
  DW_CFA_offset: r15 (r15) at cfa-16
  DW_CFA_advance_loc: 9 to 000000000000129f
  DW_CFA_def_cfa_offset: 24
  DW_CFA_offset: r14 (r14) at cfa-24
  DW_CFA_advance_loc: 5 to 00000000000012a4
  DW_CFA_def_cfa_offset: 32
  DW_CFA_offset: r13 (r13) at cfa-32
  DW_CFA_advance_loc: 5 to 00000000000012a9
  DW_CFA_def_cfa_offset: 40
  DW_CFA_offset: r12 (r12) at cfa-40
  DW_CFA_advance_loc: 4 to 00000000000012ad
  DW_CFA_def_cfa_offset: 48
  DW_CFA_offset: r6 (rbp) at cfa-48
  DW_CFA_advance_loc: 8 to 00000000000012b5
  DW_CFA_def_cfa_offset: 56
  DW_CFA_offset: r3 (rbx) at cfa-56
  DW_CFA_advance_loc: 7 to 00000000000012bc
  DW_CFA_def_cfa_offset: 64
  DW_CFA_advance_loc: 46 to 00000000000012ea
  DW_CFA_def_cfa_offset: 56
  DW_CFA_advance_loc: 1 to 00000000000012eb
  DW_CFA_def_cfa_offset: 48
  DW_CFA_advance_loc: 1 to 00000000000012ec
  DW_CFA_def_cfa_offset: 40
  DW_CFA_advance_loc: 2 to 00000000000012ee
  DW_CFA_def_cfa_offset: 32
  DW_CFA_advance_loc: 2 to 00000000000012f0
  DW_CFA_def_cfa_offset: 24
  DW_CFA_advance_loc: 2 to 00000000000012f2
  DW_CFA_def_cfa_offset: 16
  DW_CFA_advance_loc: 2 to 00000000000012f4
  DW_CFA_def_cfa_offset: 8
  DW_CFA_nop

00000108 0000000000000010 0000010c FDE cie=00000000 pc=0000000000001300..0000000000001305
  DW_CFA_nop
  DW_CFA_nop
  DW_CFA_nop

0000011c ZERO terminator


Содержимое раздела .debug_aranges (загружено из a.out):

  Длина:                    44
  Версия:                   2
  Смещение в .debug_info:   0x0
  Разм. указат:             8
  Разм. сегм.:              0

    Адрес              Длина
    00000000000011a9 00000000000000e5 
    0000000000000000 0000000000000000 

Содержимое раздела .debug_info (загружено из a.out):

  Единица компиляции @ смещение 0x0:
   Длина:           0x4b0 (32-bit)
   Версия:          4
   Смещ. аббрев:    0x0
   Разм. указат:    8
 <0><b>: номер аббревиатуры: 1 (DW_TAG_compile_unit)
    <c>   DW_AT_producer    : (косвенная строка, смещение: 0x139): GNU C17 9.3.0 -mtune=generic -march=x86-64 -g -O1 -fasynchronous-unwind-tables -fstack-protector-strong -fstack-clash-protection -fcf-protection
    <10>   DW_AT_language    : 12	(ANSI C99)
    <11>   DW_AT_name        : (косвенная строка, смещение: 0x25): problem_ap.c
    <15>   DW_AT_comp_dir    : (косвенная строка, смещение: 0xcd): /home/kolobaka2000/Рабочий стол/mipt_contests/2_sem/7_th/Problem_AP
    <19>   DW_AT_low_pc      : 0x11a9
    <21>   DW_AT_high_pc     : 0xe5
    <29>   DW_AT_stmt_list   : 0x0
 <1><2d>: номер аббревиатуры: 2 (DW_TAG_typedef)
    <2e>   DW_AT_name        : (косвенная строка, смещение: 0x52): size_t
    <32>   DW_AT_decl_file   : 3
    <33>   DW_AT_decl_line   : 209
    <34>   DW_AT_decl_column : 23
    <35>   DW_AT_type        : <0x39>
 <1><39>: номер аббревиатуры: 3 (DW_TAG_base_type)
    <3a>   DW_AT_byte_size   : 8
    <3b>   DW_AT_encoding    : 7	(unsigned)
    <3c>   DW_AT_name        : (косвенная строка, смещение: 0x26b): long unsigned int
 <1><40>: номер аббревиатуры: 3 (DW_TAG_base_type)
    <41>   DW_AT_byte_size   : 4
    <42>   DW_AT_encoding    : 7	(unsigned)
    <43>   DW_AT_name        : (косвенная строка, смещение: 0x270): unsigned int
 <1><47>: номер аббревиатуры: 4 (DW_TAG_pointer_type)
    <48>   DW_AT_byte_size   : 8
 <1><49>: номер аббревиатуры: 3 (DW_TAG_base_type)
    <4a>   DW_AT_byte_size   : 1
    <4b>   DW_AT_encoding    : 8	(unsigned char)
    <4c>   DW_AT_name        : (косвенная строка, смещение: 0x1d3): unsigned char
 <1><50>: номер аббревиатуры: 3 (DW_TAG_base_type)
    <51>   DW_AT_byte_size   : 2
    <52>   DW_AT_encoding    : 7	(unsigned)
    <53>   DW_AT_name        : (косвенная строка, смещение: 0x22c): short unsigned int
 <1><57>: номер аббревиатуры: 3 (DW_TAG_base_type)
    <58>   DW_AT_byte_size   : 1
    <59>   DW_AT_encoding    : 6	(signed char)
    <5a>   DW_AT_name        : (косвенная строка, смещение: 0x1d5): signed char
 <1><5e>: номер аббревиатуры: 3 (DW_TAG_base_type)
    <5f>   DW_AT_byte_size   : 2
    <60>   DW_AT_encoding    : 5	(signed)
    <61>   DW_AT_name        : (косвенная строка, смещение: 0x48): short int
 <1><65>: номер аббревиатуры: 5 (DW_TAG_base_type)
    <66>   DW_AT_byte_size   : 4
    <67>   DW_AT_encoding    : 5	(signed)
    <68>   DW_AT_name        : int
 <1><6c>: номер аббревиатуры: 3 (DW_TAG_base_type)
    <6d>   DW_AT_byte_size   : 8
    <6e>   DW_AT_encoding    : 5	(signed)
    <6f>   DW_AT_name        : (косвенная строка, смещение: 0x129): long int
 <1><73>: номер аббревиатуры: 2 (DW_TAG_typedef)
    <74>   DW_AT_name        : (косвенная строка, смещение: 0x295): __off_t
    <78>   DW_AT_decl_file   : 4
    <79>   DW_AT_decl_line   : 152
    <7a>   DW_AT_decl_column : 25
    <7b>   DW_AT_type        : <0x6c>
 <1><7f>: номер аббревиатуры: 2 (DW_TAG_typedef)
    <80>   DW_AT_name        : (косвенная строка, смещение: 0x28b): __off64_t
    <84>   DW_AT_decl_file   : 4
    <85>   DW_AT_decl_line   : 153
    <86>   DW_AT_decl_column : 27
    <87>   DW_AT_type        : <0x6c>
 <1><8b>: номер аббревиатуры: 6 (DW_TAG_pointer_type)
    <8c>   DW_AT_byte_size   : 8
    <8d>   DW_AT_type        : <0x91>
 <1><91>: номер аббревиатуры: 3 (DW_TAG_base_type)
    <92>   DW_AT_byte_size   : 1
    <93>   DW_AT_encoding    : 6	(signed char)
    <94>   DW_AT_name        : (косвенная строка, смещение: 0x1dc): char
 <1><98>: номер аббревиатуры: 7 (DW_TAG_const_type)
    <99>   DW_AT_type        : <0x91>
 <1><9d>: номер аббревиатуры: 8 (DW_TAG_structure_type)
    <9e>   DW_AT_name        : (косвенная строка, смещение: 0x1ca): _IO_FILE
    <a2>   DW_AT_byte_size   : 216
    <a3>   DW_AT_decl_file   : 5
    <a4>   DW_AT_decl_line   : 49
    <a5>   DW_AT_decl_column : 8
    <a6>   DW_AT_sibling     : <0x224>
 <2><aa>: номер аббревиатуры: 9 (DW_TAG_member)
    <ab>   DW_AT_name        : (косвенная строка, смещение: 0x8a): _flags
    <af>   DW_AT_decl_file   : 5
    <b0>   DW_AT_decl_line   : 51
    <b1>   DW_AT_decl_column : 7
    <b2>   DW_AT_type        : <0x65>
    <b6>   DW_AT_data_member_location: 0
 <2><b7>: номер аббревиатуры: 9 (DW_TAG_member)
    <b8>   DW_AT_name        : (косвенная строка, смещение: 0x21f): _IO_read_ptr
    <bc>   DW_AT_decl_file   : 5
    <bd>   DW_AT_decl_line   : 54
    <be>   DW_AT_decl_column : 9
    <bf>   DW_AT_type        : <0x8b>
    <c3>   DW_AT_data_member_location: 8
 <2><c4>: номер аббревиатуры: 9 (DW_TAG_member)
    <c5>   DW_AT_name        : (косвенная строка, смещение: 0xa7): _IO_read_end
    <c9>   DW_AT_decl_file   : 5
    <ca>   DW_AT_decl_line   : 55
    <cb>   DW_AT_decl_column : 9
    <cc>   DW_AT_type        : <0x8b>
    <d0>   DW_AT_data_member_location: 16
 <2><d1>: номер аббревиатуры: 9 (DW_TAG_member)
    <d2>   DW_AT_name        : (косвенная строка, смещение: 0x2d6): _IO_read_base
    <d6>   DW_AT_decl_file   : 5
    <d7>   DW_AT_decl_line   : 56
    <d8>   DW_AT_decl_column : 9
    <d9>   DW_AT_type        : <0x8b>
    <dd>   DW_AT_data_member_location: 24
 <2><de>: номер аббревиатуры: 9 (DW_TAG_member)
    <df>   DW_AT_name        : (косвенная строка, смещение: 0x1f6): _IO_write_base
    <e3>   DW_AT_decl_file   : 5
    <e4>   DW_AT_decl_line   : 57
    <e5>   DW_AT_decl_column : 9
    <e6>   DW_AT_type        : <0x8b>
    <ea>   DW_AT_data_member_location: 32
 <2><eb>: номер аббревиатуры: 9 (DW_TAG_member)
    <ec>   DW_AT_name        : (косвенная строка, смещение: 0x7c): _IO_write_ptr
    <f0>   DW_AT_decl_file   : 5
    <f1>   DW_AT_decl_line   : 58
    <f2>   DW_AT_decl_column : 9
    <f3>   DW_AT_type        : <0x8b>
    <f7>   DW_AT_data_member_location: 40
 <2><f8>: номер аббревиатуры: 9 (DW_TAG_member)
    <f9>   DW_AT_name        : (косвенная строка, смещение: 0x27d): _IO_write_end
    <fd>   DW_AT_decl_file   : 5
    <fe>   DW_AT_decl_line   : 59
    <ff>   DW_AT_decl_column : 9
    <100>   DW_AT_type        : <0x8b>
    <104>   DW_AT_data_member_location: 48
 <2><105>: номер аббревиатуры: 9 (DW_TAG_member)
    <106>   DW_AT_name        : (косвенная строка, смещение: 0x91): _IO_buf_base
    <10a>   DW_AT_decl_file   : 5
    <10b>   DW_AT_decl_line   : 60
    <10c>   DW_AT_decl_column : 9
    <10d>   DW_AT_type        : <0x8b>
    <111>   DW_AT_data_member_location: 56
 <2><112>: номер аббревиатуры: 9 (DW_TAG_member)
    <113>   DW_AT_name        : (косвенная строка, смещение: 0x0): _IO_buf_end
    <117>   DW_AT_decl_file   : 5
    <118>   DW_AT_decl_line   : 61
    <119>   DW_AT_decl_column : 9
    <11a>   DW_AT_type        : <0x8b>
    <11e>   DW_AT_data_member_location: 64
 <2><11f>: номер аббревиатуры: 9 (DW_TAG_member)
    <120>   DW_AT_name        : (косвенная строка, смещение: 0x2f9): _IO_save_base
    <124>   DW_AT_decl_file   : 5
    <125>   DW_AT_decl_line   : 64
    <126>   DW_AT_decl_column : 9
    <127>   DW_AT_type        : <0x8b>
    <12b>   DW_AT_data_member_location: 72
 <2><12c>: номер аббревиатуры: 9 (DW_TAG_member)
    <12d>   DW_AT_name        : (косвенная строка, смещение: 0x2b2): _IO_backup_base
    <131>   DW_AT_decl_file   : 5
    <132>   DW_AT_decl_line   : 65
    <133>   DW_AT_decl_column : 9
    <134>   DW_AT_type        : <0x8b>
    <138>   DW_AT_data_member_location: 80
 <2><139>: номер аббревиатуры: 9 (DW_TAG_member)
    <13a>   DW_AT_name        : (косвенная строка, смещение: 0x3b): _IO_save_end
    <13e>   DW_AT_decl_file   : 5
    <13f>   DW_AT_decl_line   : 66
    <140>   DW_AT_decl_column : 9
    <141>   DW_AT_type        : <0x8b>
    <145>   DW_AT_data_member_location: 88
 <2><146>: номер аббревиатуры: 9 (DW_TAG_member)
    <147>   DW_AT_name        : (косвенная строка, смещение: 0x9e): _markers
    <14b>   DW_AT_decl_file   : 5
    <14c>   DW_AT_decl_line   : 68
    <14d>   DW_AT_decl_column : 22
    <14e>   DW_AT_type        : <0x23d>
    <152>   DW_AT_data_member_location: 96
 <2><153>: номер аббревиатуры: 9 (DW_TAG_member)
    <154>   DW_AT_name        : (косвенная строка, смещение: 0x29d): _chain
    <158>   DW_AT_decl_file   : 5
    <159>   DW_AT_decl_line   : 70
    <15a>   DW_AT_decl_column : 20
    <15b>   DW_AT_type        : <0x243>
    <15f>   DW_AT_data_member_location: 104
 <2><160>: номер аббревиатуры: 9 (DW_TAG_member)
    <161>   DW_AT_name        : (косвенная строка, смещение: 0x313): _fileno
    <165>   DW_AT_decl_file   : 5
    <166>   DW_AT_decl_line   : 72
    <167>   DW_AT_decl_column : 7
    <168>   DW_AT_type        : <0x65>
    <16c>   DW_AT_data_member_location: 112
 <2><16d>: номер аббревиатуры: 9 (DW_TAG_member)
    <16e>   DW_AT_name        : (косвенная строка, смещение: 0x2c8): _flags2
    <172>   DW_AT_decl_file   : 5
    <173>   DW_AT_decl_line   : 73
    <174>   DW_AT_decl_column : 7
    <175>   DW_AT_type        : <0x65>
    <179>   DW_AT_data_member_location: 116
 <2><17a>: номер аббревиатуры: 9 (DW_TAG_member)
    <17b>   DW_AT_name        : (косвенная строка, смещение: 0xc): _old_offset
    <17f>   DW_AT_decl_file   : 5
    <180>   DW_AT_decl_line   : 74
    <181>   DW_AT_decl_column : 11
    <182>   DW_AT_type        : <0x73>
    <186>   DW_AT_data_member_location: 120
 <2><187>: номер аббревиатуры: 9 (DW_TAG_member)
    <188>   DW_AT_name        : (косвенная строка, смещение: 0xc1): _cur_column
    <18c>   DW_AT_decl_file   : 5
    <18d>   DW_AT_decl_line   : 77
    <18e>   DW_AT_decl_column : 18
    <18f>   DW_AT_type        : <0x50>
    <193>   DW_AT_data_member_location: 128
 <2><194>: номер аббревиатуры: 9 (DW_TAG_member)
    <195>   DW_AT_name        : (косвенная строка, смещение: 0x2ea): _vtable_offset
    <199>   DW_AT_decl_file   : 5
    <19a>   DW_AT_decl_line   : 78
    <19b>   DW_AT_decl_column : 15
    <19c>   DW_AT_type        : <0x57>
    <1a0>   DW_AT_data_member_location: 130
 <2><1a1>: номер аббревиатуры: 9 (DW_TAG_member)
    <1a2>   DW_AT_name        : (косвенная строка, смещение: 0x1ec): _shortbuf
    <1a6>   DW_AT_decl_file   : 5
    <1a7>   DW_AT_decl_line   : 79
    <1a8>   DW_AT_decl_column : 8
    <1a9>   DW_AT_type        : <0x249>
    <1ad>   DW_AT_data_member_location: 131
 <2><1ae>: номер аббревиатуры: 9 (DW_TAG_member)
    <1af>   DW_AT_name        : (косвенная строка, смещение: 0x123): _lock
    <1b3>   DW_AT_decl_file   : 5
    <1b4>   DW_AT_decl_line   : 81
    <1b5>   DW_AT_decl_column : 15
    <1b6>   DW_AT_type        : <0x259>
    <1ba>   DW_AT_data_member_location: 136
 <2><1bb>: номер аббревиатуры: 9 (DW_TAG_member)
    <1bc>   DW_AT_name        : (косвенная строка, смещение: 0x10): _offset
    <1c0>   DW_AT_decl_file   : 5
    <1c1>   DW_AT_decl_line   : 89
    <1c2>   DW_AT_decl_column : 13
    <1c3>   DW_AT_type        : <0x7f>
    <1c7>   DW_AT_data_member_location: 144
 <2><1c8>: номер аббревиатуры: 9 (DW_TAG_member)
    <1c9>   DW_AT_name        : (косвенная строка, смещение: 0x25c): _codecvt
    <1cd>   DW_AT_decl_file   : 5
    <1ce>   DW_AT_decl_line   : 91
    <1cf>   DW_AT_decl_column : 23
    <1d0>   DW_AT_type        : <0x264>
    <1d4>   DW_AT_data_member_location: 152
 <2><1d5>: номер аббревиатуры: 9 (DW_TAG_member)
    <1d6>   DW_AT_name        : (косвенная строка, смещение: 0x2a7): _wide_data
    <1da>   DW_AT_decl_file   : 5
    <1db>   DW_AT_decl_line   : 92
    <1dc>   DW_AT_decl_column : 25
    <1dd>   DW_AT_type        : <0x26f>
    <1e1>   DW_AT_data_member_location: 160
 <2><1e2>: номер аббревиатуры: 9 (DW_TAG_member)
    <1e3>   DW_AT_name        : (косвенная строка, смещение: 0x244): _freeres_list
    <1e7>   DW_AT_decl_file   : 5
    <1e8>   DW_AT_decl_line   : 93
    <1e9>   DW_AT_decl_column : 20
    <1ea>   DW_AT_type        : <0x243>
    <1ee>   DW_AT_data_member_location: 168
 <2><1ef>: номер аббревиатуры: 9 (DW_TAG_member)
    <1f0>   DW_AT_name        : (косвенная строка, смещение: 0xb4): _freeres_buf
    <1f4>   DW_AT_decl_file   : 5
    <1f5>   DW_AT_decl_line   : 94
    <1f6>   DW_AT_decl_column : 9
    <1f7>   DW_AT_type        : <0x47>
    <1fb>   DW_AT_data_member_location: 176
 <2><1fc>: номер аббревиатуры: 9 (DW_TAG_member)
    <1fd>   DW_AT_name        : (косвенная строка, смещение: 0x252): __pad5
    <201>   DW_AT_decl_file   : 5
    <202>   DW_AT_decl_line   : 95
    <203>   DW_AT_decl_column : 10
    <204>   DW_AT_type        : <0x2d>
    <208>   DW_AT_data_member_location: 184
 <2><209>: номер аббревиатуры: 9 (DW_TAG_member)
    <20a>   DW_AT_name        : (косвенная строка, смещение: 0x2d0): _mode
    <20e>   DW_AT_decl_file   : 5
    <20f>   DW_AT_decl_line   : 96
    <210>   DW_AT_decl_column : 7
    <211>   DW_AT_type        : <0x65>
    <215>   DW_AT_data_member_location: 192
 <2><216>: номер аббревиатуры: 9 (DW_TAG_member)
    <217>   DW_AT_name        : (косвенная строка, смещение: 0x205): _unused2
    <21b>   DW_AT_decl_file   : 5
    <21c>   DW_AT_decl_line   : 98
    <21d>   DW_AT_decl_column : 8
    <21e>   DW_AT_type        : <0x275>
    <222>   DW_AT_data_member_location: 196
 <2><223>: номер аббревиатуры: 0
 <1><224>: номер аббревиатуры: 2 (DW_TAG_typedef)
    <225>   DW_AT_name        : (косвенная строка, смещение: 0x1ce): FILE
    <229>   DW_AT_decl_file   : 6
    <22a>   DW_AT_decl_line   : 7
    <22b>   DW_AT_decl_column : 25
    <22c>   DW_AT_type        : <0x9d>
 <1><230>: номер аббревиатуры: 10 (DW_TAG_typedef)
    <231>   DW_AT_name        : (косвенная строка, смещение: 0x330): _IO_lock_t
    <235>   DW_AT_decl_file   : 5
    <236>   DW_AT_decl_line   : 43
    <237>   DW_AT_decl_column : 14
 <1><238>: номер аббревиатуры: 11 (DW_TAG_structure_type)
    <239>   DW_AT_name        : (косвенная строка, смещение: 0x1e1): _IO_marker
    <23d>   DW_AT_declaration : 1
 <1><23d>: номер аббревиатуры: 6 (DW_TAG_pointer_type)
    <23e>   DW_AT_byte_size   : 8
    <23f>   DW_AT_type        : <0x238>
 <1><243>: номер аббревиатуры: 6 (DW_TAG_pointer_type)
    <244>   DW_AT_byte_size   : 8
    <245>   DW_AT_type        : <0x9d>
 <1><249>: номер аббревиатуры: 12 (DW_TAG_array_type)
    <24a>   DW_AT_type        : <0x91>
    <24e>   DW_AT_sibling     : <0x259>
 <2><252>: номер аббревиатуры: 13 (DW_TAG_subrange_type)
    <253>   DW_AT_type        : <0x39>
    <257>   DW_AT_upper_bound : 0
 <2><258>: номер аббревиатуры: 0
 <1><259>: номер аббревиатуры: 6 (DW_TAG_pointer_type)
    <25a>   DW_AT_byte_size   : 8
    <25b>   DW_AT_type        : <0x230>
 <1><25f>: номер аббревиатуры: 11 (DW_TAG_structure_type)
    <260>   DW_AT_name        : (косвенная строка, смещение: 0x259): _IO_codecvt
    <264>   DW_AT_declaration : 1
 <1><264>: номер аббревиатуры: 6 (DW_TAG_pointer_type)
    <265>   DW_AT_byte_size   : 8
    <266>   DW_AT_type        : <0x25f>
 <1><26a>: номер аббревиатуры: 11 (DW_TAG_structure_type)
    <26b>   DW_AT_name        : (косвенная строка, смещение: 0x2a4): _IO_wide_data
    <26f>   DW_AT_declaration : 1
 <1><26f>: номер аббревиатуры: 6 (DW_TAG_pointer_type)
    <270>   DW_AT_byte_size   : 8
    <271>   DW_AT_type        : <0x26a>
 <1><275>: номер аббревиатуры: 12 (DW_TAG_array_type)
    <276>   DW_AT_type        : <0x91>
    <27a>   DW_AT_sibling     : <0x285>
 <2><27e>: номер аббревиатуры: 13 (DW_TAG_subrange_type)
    <27f>   DW_AT_type        : <0x39>
    <283>   DW_AT_upper_bound : 19
 <2><284>: номер аббревиатуры: 0
 <1><285>: номер аббревиатуры: 14 (DW_TAG_variable)
    <286>   DW_AT_name        : (косвенная строка, смещение: 0x2c2): stdin
    <28a>   DW_AT_decl_file   : 7
    <28b>   DW_AT_decl_line   : 137
    <28c>   DW_AT_decl_column : 14
    <28d>   DW_AT_type        : <0x291>
    <291>   DW_AT_external    : 1
    <291>   DW_AT_declaration : 1
 <1><291>: номер аббревиатуры: 6 (DW_TAG_pointer_type)
    <292>   DW_AT_byte_size   : 8
    <293>   DW_AT_type        : <0x224>
 <1><297>: номер аббревиатуры: 14 (DW_TAG_variable)
    <298>   DW_AT_name        : (косвенная строка, смещение: 0x329): stdout
    <29c>   DW_AT_decl_file   : 7
    <29d>   DW_AT_decl_line   : 138
    <29e>   DW_AT_decl_column : 14
    <29f>   DW_AT_type        : <0x291>
    <2a3>   DW_AT_external    : 1
    <2a3>   DW_AT_declaration : 1
 <1><2a3>: номер аббревиатуры: 14 (DW_TAG_variable)
    <2a4>   DW_AT_name        : (косвенная строка, смещение: 0x11c): stderr
    <2a8>   DW_AT_decl_file   : 7
    <2a9>   DW_AT_decl_line   : 139
    <2aa>   DW_AT_decl_column : 14
    <2ab>   DW_AT_type        : <0x291>
    <2af>   DW_AT_external    : 1
    <2af>   DW_AT_declaration : 1
 <1><2af>: номер аббревиатуры: 14 (DW_TAG_variable)
    <2b0>   DW_AT_name        : (косвенная строка, смещение: 0x32): sys_nerr
    <2b4>   DW_AT_decl_file   : 8
    <2b5>   DW_AT_decl_line   : 26
    <2b6>   DW_AT_decl_column : 12
    <2b7>   DW_AT_type        : <0x65>
    <2bb>   DW_AT_external    : 1
    <2bb>   DW_AT_declaration : 1
 <1><2bb>: номер аббревиатуры: 12 (DW_TAG_array_type)
    <2bc>   DW_AT_type        : <0x2d1>
    <2c0>   DW_AT_sibling     : <0x2c6>
 <2><2c4>: номер аббревиатуры: 15 (DW_TAG_subrange_type)
 <2><2c5>: номер аббревиатуры: 0
 <1><2c6>: номер аббревиатуры: 7 (DW_TAG_const_type)
    <2c7>   DW_AT_type        : <0x2bb>
 <1><2cb>: номер аббревиатуры: 6 (DW_TAG_pointer_type)
    <2cc>   DW_AT_byte_size   : 8
    <2cd>   DW_AT_type        : <0x98>
 <1><2d1>: номер аббревиатуры: 7 (DW_TAG_const_type)
    <2d2>   DW_AT_type        : <0x2cb>
 <1><2d6>: номер аббревиатуры: 16 (DW_TAG_restrict_type)
    <2d7>   DW_AT_type        : <0x2cb>
 <1><2db>: номер аббревиатуры: 14 (DW_TAG_variable)
    <2dc>   DW_AT_name        : (косвенная строка, смещение: 0x307): sys_errlist
    <2e0>   DW_AT_decl_file   : 8
    <2e1>   DW_AT_decl_line   : 27
    <2e2>   DW_AT_decl_column : 26
    <2e3>   DW_AT_type        : <0x2c6>
    <2e7>   DW_AT_external    : 1
    <2e7>   DW_AT_declaration : 1
 <1><2e7>: номер аббревиатуры: 17 (DW_TAG_subprogram)
    <2e8>   DW_AT_external    : 1
    <2e8>   DW_AT_name        : (косвенная строка, смещение: 0x23f): main
    <2ec>   DW_AT_decl_file   : 1
    <2ed>   DW_AT_decl_line   : 4
    <2ee>   DW_AT_decl_column : 5
    <2ef>   DW_AT_type        : <0x65>
    <2f3>   DW_AT_low_pc      : 0x11a9
    <2fb>   DW_AT_high_pc     : 0xe5
    <303>   DW_AT_frame_base  : 1-байтовый блок: 9c 	(DW_OP_call_frame_cfa)
    <305>   DW_AT_GNU_all_call_sites: 1
    <305>   DW_AT_sibling     : <0x451>
 <2><309>: номер аббревиатуры: 18 (DW_TAG_variable)
    <30a>   DW_AT_name        : (косвенная строка, смещение: 0x2e4): check
    <30e>   DW_AT_decl_file   : 1
    <30f>   DW_AT_decl_line   : 6
    <310>   DW_AT_decl_column : 7
    <311>   DW_AT_type        : <0x65>
    <315>   DW_AT_location    : 0x12 (список местоположения)
    <319>   DW_AT_GNU_locviews: 0x0
 <2><31d>: номер аббревиатуры: 19 (DW_TAG_variable)
    <31e>   DW_AT_name        : N
    <320>   DW_AT_decl_file   : 1
    <321>   DW_AT_decl_line   : 7
    <322>   DW_AT_decl_column : 12
    <323>   DW_AT_type        : <0x40>
    <327>   DW_AT_location    : 2-байтовый блок: 91 54 	(DW_OP_fbreg: -44)
 <2><32a>: номер аббревиатуры: 20 (DW_TAG_variable)
    <32b>   DW_AT_name        : i
    <32d>   DW_AT_decl_file   : 1
    <32e>   DW_AT_decl_line   : 8
    <32f>   DW_AT_decl_column : 12
    <330>   DW_AT_type        : <0x40>
    <334>   DW_AT_location    : 0xd6 (список местоположения)
    <338>   DW_AT_GNU_locviews: 0xd0
 <2><33c>: номер аббревиатуры: 21 (DW_TAG_variable)
    <33d>   DW_AT_name        : (косвенная строка, смещение: 0x68): __PRETTY_FUNCTION__
    <341>   DW_AT_type        : <0x461>
    <345>   DW_AT_artificial  : 1
    <345>   DW_AT_location    : 9-байтовый блок: 3 23 20 0 0 0 0 0 0 	(DW_OP_addr: 2023)
 <2><34f>: номер аббревиатуры: 22 (DW_TAG_inlined_subroutine)
    <350>   DW_AT_abstract_origin: <0x466>
    <354>   DW_AT_entry_pc    : 0x1234
    <35c>   DW_AT_GNU_entry_view: 1
    <35d>   DW_AT_ranges      : 0x0
    <361>   DW_AT_call_file   : 1
    <362>   DW_AT_call_line   : 18
    <363>   DW_AT_call_column : 7
    <364>   DW_AT_sibling     : <0x38f>
 <3><368>: номер аббревиатуры: 23 (DW_TAG_formal_parameter)
    <369>   DW_AT_abstract_origin: <0x477>
    <36d>   DW_AT_location    : 0x123 (список местоположения)
    <371>   DW_AT_GNU_locviews: 0x121
 <3><375>: номер аббревиатуры: 24 (DW_TAG_GNU_call_site)
    <376>   DW_AT_low_pc      : 0x1246
    <37e>   DW_AT_abstract_origin: <0x485>
 <4><382>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <383>   DW_AT_location    : 1-байтовый блок: 55 	(DW_OP_reg5 (rdi))
    <385>   DW_AT_GNU_call_site_value: 1-байтовый блок: 31 	(DW_OP_lit1)
 <4><387>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <388>   DW_AT_location    : 1-байтовый блок: 54 	(DW_OP_reg4 (rsi))
    <38a>   DW_AT_GNU_call_site_value: 2-байтовый блок: 76 0 	(DW_OP_breg6 (rbp): 0)
 <4><38d>: номер аббревиатуры: 0
 <3><38e>: номер аббревиатуры: 0
 <2><38f>: номер аббревиатуры: 26 (DW_TAG_inlined_subroutine)
    <390>   DW_AT_abstract_origin: <0x466>
    <394>   DW_AT_entry_pc    : 0x11f8
    <39c>   DW_AT_GNU_entry_view: 1
    <39d>   DW_AT_low_pc      : 0x11f8
    <3a5>   DW_AT_high_pc     : 0x1d
    <3ad>   DW_AT_call_file   : 1
    <3ae>   DW_AT_call_line   : 23
    <3af>   DW_AT_call_column : 5
    <3b0>   DW_AT_sibling     : <0x3e0>
 <3><3b4>: номер аббревиатуры: 23 (DW_TAG_formal_parameter)
    <3b5>   DW_AT_abstract_origin: <0x477>
    <3b9>   DW_AT_location    : 0x151 (список местоположения)
    <3bd>   DW_AT_GNU_locviews: 0x14f
 <3><3c1>: номер аббревиатуры: 24 (DW_TAG_GNU_call_site)
    <3c2>   DW_AT_low_pc      : 0x1213
    <3ca>   DW_AT_abstract_origin: <0x485>
 <4><3ce>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <3cf>   DW_AT_location    : 1-байтовый блок: 55 	(DW_OP_reg5 (rdi))
    <3d1>   DW_AT_GNU_call_site_value: 1-байтовый блок: 31 	(DW_OP_lit1)
 <4><3d3>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <3d4>   DW_AT_location    : 1-байтовый блок: 54 	(DW_OP_reg4 (rsi))
    <3d6>   DW_AT_GNU_call_site_value: 2-байтовый блок: 76 0 	(DW_OP_breg6 (rbp): 0)
 <4><3d9>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <3da>   DW_AT_location    : 1-байтовый блок: 51 	(DW_OP_reg1 (rdx))
    <3dc>   DW_AT_GNU_call_site_value: 1-байтовый блок: 31 	(DW_OP_lit1)
 <4><3de>: номер аббревиатуры: 0
 <3><3df>: номер аббревиатуры: 0
 <2><3e0>: номер аббревиатуры: 27 (DW_TAG_GNU_call_site)
    <3e1>   DW_AT_low_pc      : 0x11de
    <3e9>   DW_AT_abstract_origin: <0x491>
    <3ed>   DW_AT_sibling     : <0x405>
 <3><3f1>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <3f2>   DW_AT_location    : 1-байтовый блок: 55 	(DW_OP_reg5 (rdi))
    <3f4>   DW_AT_GNU_call_site_value: 9-байтовый блок: 3 4 20 0 0 0 0 0 0 	(DW_OP_addr: 2004)
 <3><3fe>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <3ff>   DW_AT_location    : 1-байтовый блок: 54 	(DW_OP_reg4 (rsi))
    <401>   DW_AT_GNU_call_site_value: 2-байтовый блок: 91 54 	(DW_OP_fbreg: -44)
 <3><404>: номер аббревиатуры: 0
 <2><405>: номер аббревиатуры: 27 (DW_TAG_GNU_call_site)
    <406>   DW_AT_low_pc      : 0x1234
    <40e>   DW_AT_abstract_origin: <0x49e>
    <412>   DW_AT_sibling     : <0x443>
 <3><416>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <417>   DW_AT_location    : 1-байтовый блок: 55 	(DW_OP_reg5 (rdi))
    <419>   DW_AT_GNU_call_site_value: 9-байтовый блок: 3 14 20 0 0 0 0 0 0 	(DW_OP_addr: 2014)
 <3><423>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <424>   DW_AT_location    : 1-байтовый блок: 54 	(DW_OP_reg4 (rsi))
    <426>   DW_AT_GNU_call_site_value: 9-байтовый блок: 3 7 20 0 0 0 0 0 0 	(DW_OP_addr: 2007)
 <3><430>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <431>   DW_AT_location    : 1-байтовый блок: 51 	(DW_OP_reg1 (rdx))
    <433>   DW_AT_GNU_call_site_value: 1-байтовый блок: 3b 	(DW_OP_lit11)
 <3><435>: номер аббревиатуры: 25 (DW_TAG_GNU_call_site_parameter)
    <436>   DW_AT_location    : 1-байтовый блок: 52 	(DW_OP_reg2 (rcx))
    <438>   DW_AT_GNU_call_site_value: 9-байтовый блок: 3 23 20 0 0 0 0 0 0 	(DW_OP_addr: 2023)
 <3><442>: номер аббревиатуры: 0
 <2><443>: номер аббревиатуры: 28 (DW_TAG_GNU_call_site)
    <444>   DW_AT_low_pc      : 0x128e
    <44c>   DW_AT_abstract_origin: <0x4aa>
 <2><450>: номер аббревиатуры: 0
 <1><451>: номер аббревиатуры: 12 (DW_TAG_array_type)
    <452>   DW_AT_type        : <0x98>
    <456>   DW_AT_sibling     : <0x461>
 <2><45a>: номер аббревиатуры: 13 (DW_TAG_subrange_type)
    <45b>   DW_AT_type        : <0x39>
    <45f>   DW_AT_upper_bound : 4
 <2><460>: номер аббревиатуры: 0
 <1><461>: номер аббревиатуры: 7 (DW_TAG_const_type)
    <462>   DW_AT_type        : <0x451>
 <1><466>: номер аббревиатуры: 29 (DW_TAG_subprogram)
    <467>   DW_AT_external    : 1
    <467>   DW_AT_name        : (косвенная строка, смещение: 0x132): printf
    <46b>   DW_AT_decl_file   : 2
    <46c>   DW_AT_decl_line   : 105
    <46d>   DW_AT_decl_column : 1
    <46e>   DW_AT_prototyped  : 1
    <46e>   DW_AT_type        : <0x65>
    <472>   DW_AT_inline      : 3	(объявлен как внутристрочный, так и есть)
    <473>   DW_AT_artificial  : 1
    <473>   DW_AT_sibling     : <0x485>
 <2><477>: номер аббревиатуры: 30 (DW_TAG_formal_parameter)
    <478>   DW_AT_name        : (косвенная строка, смещение: 0x265): __fmt
    <47c>   DW_AT_decl_file   : 2
    <47d>   DW_AT_decl_line   : 105
    <47e>   DW_AT_decl_column : 32
    <47f>   DW_AT_type        : <0x2d6>
 <2><483>: номер аббревиатуры: 31 (DW_TAG_unspecified_parameters)
 <2><484>: номер аббревиатуры: 0
 <1><485>: номер аббревиатуры: 32 (DW_TAG_subprogram)
    <486>   DW_AT_external    : 1
    <486>   DW_AT_declaration : 1
    <486>   DW_AT_linkage_name: (косвенная строка, смещение: 0x18): __printf_chk
    <48a>   DW_AT_name        : (косвенная строка, смещение: 0x18): __printf_chk
    <48e>   DW_AT_decl_file   : 2
    <48f>   DW_AT_decl_line   : 90
    <490>   DW_AT_decl_column : 12
 <1><491>: номер аббревиатуры: 33 (DW_TAG_subprogram)
    <492>   DW_AT_external    : 1
    <492>   DW_AT_declaration : 1
    <492>   DW_AT_linkage_name: (косвенная строка, смещение: 0x59): __isoc99_scanf
    <496>   DW_AT_name        : (косвенная строка, смещение: 0x62): scanf
    <49a>   DW_AT_decl_file   : 7
    <49b>   DW_AT_decl_line   : 410
    <49d>   DW_AT_decl_column : 12
 <1><49e>: номер аббревиатуры: 32 (DW_TAG_subprogram)
    <49f>   DW_AT_external    : 1
    <49f>   DW_AT_declaration : 1
    <49f>   DW_AT_linkage_name: (косвенная строка, смещение: 0x31b): __assert_fail
    <4a3>   DW_AT_name        : (косвенная строка, смещение: 0x31b): __assert_fail
    <4a7>   DW_AT_decl_file   : 9
    <4a8>   DW_AT_decl_line   : 69
    <4a9>   DW_AT_decl_column : 13
 <1><4aa>: номер аббревиатуры: 34 (DW_TAG_subprogram)
    <4ab>   DW_AT_external    : 1
    <4ab>   DW_AT_declaration : 1
    <4ab>   DW_AT_linkage_name: (косвенная строка, смещение: 0x20e): __stack_chk_fail
    <4af>   DW_AT_name        : (косвенная строка, смещение: 0x20e): __stack_chk_fail
 <1><4b3>: номер аббревиатуры: 0

Содержимое раздела .debug_abbrev (загружено из a.out):

  Число TAG (0x0)
   1      DW_TAG_compile_unit    [имеет потомков]
    DW_AT_producer     DW_FORM_strp
    DW_AT_language     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT_comp_dir     DW_FORM_strp
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_stmt_list    DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   2      DW_TAG_typedef    [нет потомков]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   3      DW_TAG_base_type    [нет потомков]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0
   4      DW_TAG_pointer_type    [нет потомков]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   5      DW_TAG_base_type    [нет потомков]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_encoding     DW_FORM_data1
    DW_AT_name         DW_FORM_string
    DW_AT value: 0     DW_FORM value: 0
   6      DW_TAG_pointer_type    [нет потомков]
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   7      DW_TAG_const_type    [нет потомков]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   8      DW_TAG_structure_type    [имеет потомков]
    DW_AT_name         DW_FORM_strp
    DW_AT_byte_size    DW_FORM_data1
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   9      DW_TAG_member    [нет потомков]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_data_member_location DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   10      DW_TAG_typedef    [нет потомков]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   11      DW_TAG_structure_type    [нет потомков]
    DW_AT_name         DW_FORM_strp
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   12      DW_TAG_array_type    [имеет потомков]
    DW_AT_type         DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   13      DW_TAG_subrange_type    [нет потомков]
    DW_AT_type         DW_FORM_ref4
    DW_AT_upper_bound  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   14      DW_TAG_variable    [нет потомков]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT value: 0     DW_FORM value: 0
   15      DW_TAG_subrange_type    [нет потомков]
    DW_AT value: 0     DW_FORM value: 0
   16      DW_TAG_restrict_type    [нет потомков]
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   17      DW_TAG_subprogram    [имеет потомков]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_frame_base   DW_FORM_exprloc
    DW_AT_GNU_all_call_sites DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   18      DW_TAG_variable    [нет потомков]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   19      DW_TAG_variable    [нет потомков]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   20      DW_TAG_variable    [нет потомков]
    DW_AT_name         DW_FORM_string
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   21      DW_TAG_variable    [нет потомков]
    DW_AT_name         DW_FORM_strp
    DW_AT_type         DW_FORM_ref4
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT_location     DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   22      DW_TAG_inlined_subroutine    [имеет потомков]
    DW_AT_abstract_origin DW_FORM_ref4
    DW_AT_entry_pc     DW_FORM_addr
    DW_AT_GNU_entry_view DW_FORM_data1
    DW_AT_ranges       DW_FORM_sec_offset
    DW_AT_call_file    DW_FORM_data1
    DW_AT_call_line    DW_FORM_data1
    DW_AT_call_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   23      DW_TAG_formal_parameter    [нет потомков]
    DW_AT_abstract_origin DW_FORM_ref4
    DW_AT_location     DW_FORM_sec_offset
    DW_AT_GNU_locviews DW_FORM_sec_offset
    DW_AT value: 0     DW_FORM value: 0
   24      DW_TAG_GNU_call_site    [имеет потомков]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_abstract_origin DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   25      DW_TAG_GNU_call_site_parameter    [нет потомков]
    DW_AT_location     DW_FORM_exprloc
    DW_AT_GNU_call_site_value DW_FORM_exprloc
    DW_AT value: 0     DW_FORM value: 0
   26      DW_TAG_inlined_subroutine    [имеет потомков]
    DW_AT_abstract_origin DW_FORM_ref4
    DW_AT_entry_pc     DW_FORM_addr
    DW_AT_GNU_entry_view DW_FORM_data1
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_high_pc      DW_FORM_data8
    DW_AT_call_file    DW_FORM_data1
    DW_AT_call_line    DW_FORM_data1
    DW_AT_call_column  DW_FORM_data1
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   27      DW_TAG_GNU_call_site    [имеет потомков]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_abstract_origin DW_FORM_ref4
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   28      DW_TAG_GNU_call_site    [нет потомков]
    DW_AT_low_pc       DW_FORM_addr
    DW_AT_abstract_origin DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   29      DW_TAG_subprogram    [имеет потомков]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_prototyped   DW_FORM_flag_present
    DW_AT_type         DW_FORM_ref4
    DW_AT_inline       DW_FORM_data1
    DW_AT_artificial   DW_FORM_flag_present
    DW_AT_sibling      DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   30      DW_TAG_formal_parameter    [нет потомков]
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT_type         DW_FORM_ref4
    DW_AT value: 0     DW_FORM value: 0
   31      DW_TAG_unspecified_parameters    [нет потомков]
    DW_AT value: 0     DW_FORM value: 0
   32      DW_TAG_subprogram    [нет потомков]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_linkage_name DW_FORM_strp
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data1
    DW_AT_decl_column  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   33      DW_TAG_subprogram    [нет потомков]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_linkage_name DW_FORM_strp
    DW_AT_name         DW_FORM_strp
    DW_AT_decl_file    DW_FORM_data1
    DW_AT_decl_line    DW_FORM_data2
    DW_AT_decl_column  DW_FORM_data1
    DW_AT value: 0     DW_FORM value: 0
   34      DW_TAG_subprogram    [нет потомков]
    DW_AT_external     DW_FORM_flag_present
    DW_AT_declaration  DW_FORM_flag_present
    DW_AT_linkage_name DW_FORM_strp
    DW_AT_name         DW_FORM_strp
    DW_AT value: 0     DW_FORM value: 0

Необработанный дамп для отладки содержимого раздела .debug_line (загружен из a.out):

  Смещение:                    0x0
  Длина:                       458
  Версия DWARF:                3
  Длина пролога:               266
  Миним. длина инструкции:     1
  Нач. значение «is_stmt»:     1
  Основание строки:            -5
  Диапазон строки:             14
  Основание кода операции:     13

 Коды операций:
  Код операции 1 содержит 0 аргументов
  Код операции 2 содержит 1 аргумент
  Код операции 3 содержит 1 аргумент
  Код операции 4 содержит 1 аргумент
  Код операции 5 содержит 1 аргумент
  Код операции 6 содержит 0 аргументов
  Код операции 7 содержит 0 аргументов
  Код операции 8 содержит 0 аргументов
  Код операции 9 содержит 1 аргумент
  Код операции 10 содержит 0 аргументов
  Код операции 11 содержит 0 аргументов
  Код операции 12 содержит 1 аргумент

 Таблица каталогов (смещение 0x1b):
  1	/usr/include/x86_64-linux-gnu/bits
  2	/usr/lib/gcc/x86_64-linux-gnu/9/include
  3	/usr/include/x86_64-linux-gnu/bits/types
  4	/usr/include

 Таблица имён файлов (смещение 0x9d):
  Пункт	Каталог	Время	Размер	Имя
  1	0	0	0	problem_ap.c
  2	1	0	0	stdio2.h
  3	2	0	0	stddef.h
  4	1	0	0	types.h
  5	3	0	0	struct_FILE.h
  6	3	0	0	FILE.h
  7	4	0	0	stdio.h
  8	1	0	0	sys_errlist.h
  9	4	0	0	assert.h

 Операторы номера строки:
  [0x00000114]  Установка столбца равным 1
  [0x00000116]  Расширенный код операции 2: установка Address равным 0x11a9
  [0x00000121]  Специальный код операции 9: продвижение адреса на 0 в 0x11a9 и строки на 4 в 5
  [0x00000122]  Установка is_stmt равным 0
  [0x00000123]  Специальный код операции 173: продвижение адреса на 12 в 0x11b5 и строки на 0 в 5
  [0x00000124]  Установка столбца равным 3
  [0x00000126]  Установка is_stmt равным 1
  [0x00000127]  Специальный код операции 230: продвижение адреса на 16 в 0x11c5 и строки на 1 в 6
  [0x00000128]  Специальный код операции 6: продвижение адреса на 0 в 0x11c5 и строки на 1 в 7 (вид 1)
  [0x00000129]  Установка столбца равным 12
  [0x0000012b]  Установка is_stmt равным 0
  [0x0000012c]  Копия (вид 2)
  [0x0000012d]  Установка столбца равным 3
  [0x0000012f]  Установка is_stmt равным 1
  [0x00000130]  Специальный код операции 118: продвижение адреса на 8 в 0x11cd и строки на 1 в 8
  [0x00000131]  Специальный код операции 7: продвижение адреса на 0 в 0x11cd и строки на 2 в 10 (вид 1)
  [0x00000132]  Установка столбца равным 11
  [0x00000134]  Установка is_stmt равным 0
  [0x00000135]  Копия (вид 2)
  [0x00000136]  Установка столбца равным 3
  [0x00000138]  Установка is_stmt равным 1
  [0x00000139]  Продвижение счётчика команд на постоянную 17 в 0x11de
  [0x0000013a]  Специальный код операции 6: продвижение адреса на 0 в 0x11de и строки на 1 в 11
  [0x0000013b]  Установка столбца равным 9
  [0x0000013d]  Специальный код операции 77: продвижение адреса на 5 в 0x11e3 и строки на 2 в 13
  [0x0000013e]  Установка столбца равным 17
  [0x00000140]  Установка is_stmt равным 0
  [0x00000141]  Копия (вид 1)
  [0x00000142]  Установка столбца равным 12
  [0x00000144]  Специальный код операции 56: продвижение адреса на 4 в 0x11e7 и строки на -5 в 8
  [0x00000145]  Установка имени файла в пункт 2 в таблице имён файлов
  [0x00000147]  Установка столбца равным 10
  [0x00000149]  Продвижение строки на 99 в 107
  [0x0000014c]  Специальный код операции 75: продвижение адреса на 5 в 0x11ec и строки на 0 в 107
  [0x0000014d]  Установка имени файла в пункт 1 в таблице имён файлов
  [0x0000014f]  Установка столбца равным 9
  [0x00000151]  Продвижение строки на -94 в 13
  [0x00000154]  Специальный код операции 103: продвижение адреса на 7 в 0x11f3 и строки на 0 в 13
  [0x00000155]  Установка столбца равным 5
  [0x00000157]  Установка is_stmt равным 1
  [0x00000158]  Продвижение строки на 10 в 23
  [0x0000015a]  Специальный код операции 75: продвижение адреса на 5 в 0x11f8 и строки на 0 в 23
  [0x0000015b]  Установка имени файла в пункт 2 в таблице имён файлов
  [0x0000015d]  Установка столбца равным 1
  [0x0000015f]  Продвижение строки на 82 в 105
  [0x00000162]  Копия (вид 1)
  [0x00000163]  Установка столбца равным 3
  [0x00000165]  Специальный код операции 7: продвижение адреса на 0 в 0x11f8 и строки на 2 в 107 (вид 2)
  [0x00000166]  Установка столбца равным 10
  [0x00000168]  Установка is_stmt равным 0
  [0x00000169]  Копия (вид 3)
  [0x0000016a]  Продвижение счётчика команд на постоянную 17 в 0x1209
  [0x0000016b]  Специальный код операции 173: продвижение адреса на 12 в 0x1215 и строки на 0 в 107
  [0x0000016c]  Установка имени файла в пункт 1 в таблице имён файлов
  [0x0000016e]  Установка столбца равным 3
  [0x00000170]  Расширенный код операции 4: установка Discriminator равным 1
  [0x00000174]  Установка is_stmt равным 1
  [0x00000175]  Продвижение строки на -96 в 11
  [0x00000178]  Копия (вид 1)
  [0x00000179]  Установка столбца равным 7
  [0x0000017b]  Продвижение счётчика команд на постоянную 17 в 0x1226
  [0x0000017c]  Специальный код операции 208: продвижение адреса на 14 в 0x1234 и строки на 7 в 18
  [0x0000017d]  Установка имени файла в пункт 2 в таблице имён файлов
  [0x0000017f]  Установка столбца равным 1
  [0x00000181]  Продвижение строки на 87 в 105
  [0x00000184]  Копия (вид 1)
  [0x00000185]  Установка столбца равным 3
  [0x00000187]  Специальный код операции 7: продвижение адреса на 0 в 0x1234 и строки на 2 в 107 (вид 2)
  [0x00000188]  Установка столбца равным 10
  [0x0000018a]  Установка is_stmt равным 0
  [0x0000018b]  Копия (вид 3)
  [0x0000018c]  Продвижение счётчика команд на постоянную 17 в 0x1245
  [0x0000018d]  Специальный код операции 19: продвижение адреса на 1 в 0x1246 и строки на 0 в 107
  [0x0000018e]  Установка имени файла в пункт 1 в таблице имён файлов
  [0x00000190]  Установка столбца равным 5
  [0x00000192]  Установка is_stmt равным 1
  [0x00000193]  Продвижение строки на -87 в 20
  [0x00000196]  Копия (вид 1)
  [0x00000197]  Установка столбца равным 6
  [0x00000199]  Установка is_stmt равным 0
  [0x0000019a]  Копия (вид 2)
  [0x0000019b]  Установка столбца равным 9
  [0x0000019d]  Установка is_stmt равным 1
  [0x0000019e]  Продвижение строки на -7 в 13
  [0x000001a0]  Специальный код операции 47: продвижение адреса на 3 в 0x1249 и строки на 0 в 13
  [0x000001a1]  Установка столбца равным 17
  [0x000001a3]  Установка is_stmt равным 0
  [0x000001a4]  Копия (вид 1)
  [0x000001a5]  Установка столбца равным 13
  [0x000001a7]  Специальный код операции 61: продвижение адреса на 4 в 0x124d и строки на 0 в 13
  [0x000001a8]  Установка столбца равным 9
  [0x000001aa]  Специальный код операции 75: продвижение адреса на 5 в 0x1252 и строки на 0 в 13
  [0x000001ab]  Установка столбца равным 5
  [0x000001ad]  Установка is_stmt равным 1
  [0x000001ae]  Специальный код операции 63: продвижение адреса на 4 в 0x1256 и строки на 2 в 15
  [0x000001af]  Установка столбца равным 15
  [0x000001b1]  Установка is_stmt равным 0
  [0x000001b2]  Копия (вид 1)
  [0x000001b3]  Установка столбца равным 11
  [0x000001b5]  Специальный код операции 103: продвижение адреса на 7 в 0x125d и строки на 0 в 15
  [0x000001b6]  Установка столбца равным 5
  [0x000001b8]  Установка is_stmt равным 1
  [0x000001b9]  Специальный код операции 48: продвижение адреса на 3 в 0x1260 и строки на 1 в 16
  [0x000001ba]  Установка столбца равным 8
  [0x000001bc]  Установка is_stmt равным 0
  [0x000001bd]  Копия (вид 1)
  [0x000001be]  Установка столбца равным 3
  [0x000001c0]  Установка is_stmt равным 1
  [0x000001c1]  Специальный код операции 95: продвижение адреса на 6 в 0x1266 и строки на 6 в 22
  [0x000001c2]  Установка столбца равным 6
  [0x000001c4]  Установка is_stmt равным 0
  [0x000001c5]  Копия (вид 1)
  [0x000001c6]  Установка столбца равным 1
  [0x000001c8]  Специальный код операции 77: продвижение адреса на 5 в 0x126b и строки на 2 в 24
  [0x000001c9]  Продвижение счётчика команд на 35 в 0x128e
  [0x000001cb]  Расширенный код операции 1: Конец последовательности


Содержимое раздела .debug_str (загружено из a.out):

  0x00000000 5f494f5f 6275665f 656e6400 5f6f6c64 _IO_buf_end._old
  0x00000010 5f6f6666 73657400 5f5f7072 696e7466 _offset.__printf
  0x00000020 5f63686b 0070726f 626c656d 5f61702e _chk.problem_ap.
  0x00000030 63007379 735f6e65 7272005f 494f5f73 c.sys_nerr._IO_s
  0x00000040 6176655f 656e6400 73686f72 7420696e ave_end.short in
  0x00000050 74007369 7a655f74 005f5f69 736f6339 t.size_t.__isoc9
  0x00000060 395f7363 616e6600 5f5f5052 45545459 9_scanf.__PRETTY
  0x00000070 5f46554e 4354494f 4e5f5f00 5f494f5f _FUNCTION__._IO_
  0x00000080 77726974 655f7074 72005f66 6c616773 write_ptr._flags
  0x00000090 005f494f 5f627566 5f626173 65005f6d ._IO_buf_base._m
  0x000000a0 61726b65 7273005f 494f5f72 6561645f arkers._IO_read_
  0x000000b0 656e6400 5f667265 65726573 5f627566 end._freeres_buf
  0x000000c0 005f6375 725f636f 6c756d6e 002f686f ._cur_column./ho
  0x000000d0 6d652f6b 6f6c6f62 616b6132 3030302f me/kolobaka2000/
  0x000000e0 d0a0d0b0 d0b1d0be d187d0b8 d0b920d1 .............. .
  0x000000f0 81d182d0 bed0bb2f 6d697074 5f636f6e ......./mipt_con
  0x00000100 74657374 732f325f 73656d2f 375f7468 tests/2_sem/7_th
  0x00000110 2f50726f 626c656d 5f415000 73746465 /Problem_AP.stde
  0x00000120 7272005f 6c6f636b 006c6f6e 6720696e rr._lock.long in
  0x00000130 74007072 696e7466 00474e55 20433137 t.printf.GNU C17
  0x00000140 20392e33 2e30202d 6d74756e 653d6765  9.3.0 -mtune=ge
  0x00000150 6e657269 63202d6d 61726368 3d783836 neric -march=x86
  0x00000160 2d363420 2d67202d 4f31202d 66617379 -64 -g -O1 -fasy
  0x00000170 6e636872 6f6e6f75 732d756e 77696e64 nchronous-unwind
  0x00000180 2d746162 6c657320 2d667374 61636b2d -tables -fstack-
  0x00000190 70726f74 6563746f 722d7374 726f6e67 protector-strong
  0x000001a0 202d6673 7461636b 2d636c61 73682d70  -fstack-clash-p
  0x000001b0 726f7465 6374696f 6e202d66 63662d70 rotection -fcf-p
  0x000001c0 726f7465 6374696f 6e005f49 4f5f4649 rotection._IO_FI
  0x000001d0 4c450075 6e736967 6e656420 63686172 LE.unsigned char
  0x000001e0 005f494f 5f6d6172 6b657200 5f73686f ._IO_marker._sho
  0x000001f0 72746275 66005f49 4f5f7772 6974655f rtbuf._IO_write_
  0x00000200 62617365 005f756e 75736564 32005f5f base._unused2.__
  0x00000210 73746163 6b5f6368 6b5f6661 696c005f stack_chk_fail._
  0x00000220 494f5f72 6561645f 70747200 73686f72 IO_read_ptr.shor
  0x00000230 7420756e 7369676e 65642069 6e74006d t unsigned int.m
  0x00000240 61696e00 5f667265 65726573 5f6c6973 ain._freeres_lis
  0x00000250 74005f5f 70616435 005f494f 5f636f64 t.__pad5._IO_cod
  0x00000260 65637674 005f5f66 6d74006c 6f6e6720 ecvt.__fmt.long 
  0x00000270 756e7369 676e6564 20696e74 005f494f unsigned int._IO
  0x00000280 5f777269 74655f65 6e64005f 5f6f6666 _write_end.__off
  0x00000290 36345f74 005f5f6f 66665f74 005f6368 64_t.__off_t._ch
  0x000002a0 61696e00 5f494f5f 77696465 5f646174 ain._IO_wide_dat
  0x000002b0 61005f49 4f5f6261 636b7570 5f626173 a._IO_backup_bas
  0x000002c0 65007374 64696e00 5f666c61 67733200 e.stdin._flags2.
  0x000002d0 5f6d6f64 65005f49 4f5f7265 61645f62 _mode._IO_read_b
  0x000002e0 61736500 63686563 6b005f76 7461626c ase.check._vtabl
  0x000002f0 655f6f66 66736574 005f494f 5f736176 e_offset._IO_sav
  0x00000300 655f6261 73650073 79735f65 72726c69 e_base.sys_errli
  0x00000310 7374005f 66696c65 6e6f005f 5f617373 st._fileno.__ass
  0x00000320 6572745f 6661696c 00737464 6f757400 ert_fail.stdout.
  0x00000330 5f494f5f 6c6f636b 5f7400            _IO_lock_t.

Содержимое раздела .debug_loc (загружено из a.out):

    Смещ.    Начало           Конец            Выражение

    00000000 v000000000000001 v000000000000000 расположение видовой пары
    00000002 v000000000000000 v000000000000000 расположение видовой пары
    00000004 v000000000000000 v000000000000000 расположение видовой пары
    00000006 v000000000000000 v000000000000000 расположение видовой пары
    00000008 v000000000000000 v000000000000000 расположение видовой пары
    0000000a v000000000000000 v000000000000000 расположение видовой пары
    0000000c v000000000000000 v000000000000000 расположение видовой пары
    0000000e v000000000000000 v000000000000000 расположение видовой пары
    00000010 v000000000000000 v000000000000000 расположение видовой пары

    00000012 v000000000000001 v000000000000000 появления в 00000000 для:
             00000000000011c5 00000000000011de (DW_OP_lit0; DW_OP_stack_value)
    00000026 v000000000000000 v000000000000000 появления в 00000002 для:
             00000000000011de 00000000000011e3 (DW_OP_reg0 (rax))
    00000039 v000000000000000 v000000000000000 появления в 00000004 для:
             00000000000011e3 00000000000011f8 (DW_OP_lit1; DW_OP_stack_value)
    0000004d v000000000000000 v000000000000000 появления в 00000006 для:
             0000000000001215 0000000000001233 (DW_OP_reg0 (rax))
    00000060 v000000000000000 v000000000000000 появления в 00000008 для:
             0000000000001234 0000000000001245 (DW_OP_reg1 (rdx))
    00000073 v000000000000000 v000000000000000 появления в 0000000a для:
             0000000000001245 0000000000001256 (DW_OP_reg12 (r12))
    00000086 v000000000000000 v000000000000000 появления в 0000000c для:
             0000000000001256 0000000000001260 (DW_OP_lit1; DW_OP_stack_value)
    0000009a v000000000000000 v000000000000000 появления в 0000000e для:
             0000000000001260 0000000000001266 (DW_OP_reg1 (rdx))
    000000ad v000000000000000 v000000000000000 появления в 00000010 для:
             0000000000001266 000000000000126b (DW_OP_reg12 (r12))
    000000c0 <Конец списка>

    000000d0 v000000000000001 v000000000000000 расположение видовой пары
    000000d2 v000000000000000 v000000000000000 расположение видовой пары
    000000d4 v000000000000000 v000000000000000 расположение видовой пары

    000000d6 v000000000000001 v000000000000000 появления в 000000d0 для:
             00000000000011cd 00000000000011f8 (DW_OP_lit2; DW_OP_stack_value)
    000000ea v000000000000000 v000000000000000 появления в 000000d2 для:
             0000000000001215 0000000000001234 (DW_OP_lit2; DW_OP_stack_value)
    000000fe v000000000000000 v000000000000000 появления в 000000d4 для:
             0000000000001234 000000000000126b (DW_OP_reg3 (rbx))
    00000111 <Конец списка>

    00000121 v000000000000001 v000000000000000 расположение видовой пары

    00000123 v000000000000001 v000000000000000 появления в 00000121 для:
             0000000000001234 0000000000001246 (DW_OP_addr: 201f; DW_OP_stack_value)
    0000013f <Конец списка>

    0000014f v000000000000001 v000000000000000 расположение видовой пары

    00000151 v000000000000001 v000000000000000 появления в 0000014f для:
             00000000000011f8 0000000000001215 (DW_OP_addr: 201f; DW_OP_stack_value)
    0000016d <Конец списка>

Содержимое раздела .debug_ranges (загружено из a.out):

    Смещ.    Начало   Конец
    00000000 00000000000011ec 00000000000011f3 
    00000000 0000000000001234 0000000000001246 
    00000000 <Конец списка>

